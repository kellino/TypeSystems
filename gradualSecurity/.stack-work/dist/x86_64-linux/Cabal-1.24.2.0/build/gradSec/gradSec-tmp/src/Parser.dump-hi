
==================== FINAL INTERFACE ====================
2017-03-27 12:48:41.138996984 UTC

interface main@main:Parser 8002
  interface hash: 18a1eb635ef32955d239cbb5cf4ba0e4
  ABI hash: 9cdadedbff68b303cd81f0da6d020a2a
  export-list hash: 483438ccda3f2e12fd27e8a6aee94b42
  orphan hash: d7643c5d211a2373693945b3e3ff1054
  flag hash: 0adf61f631c3dfeb3b73b58bc72b1d3b
  sig of: Nothing
  used TH splices: False
  where
exports:
  Parser.decl
  Parser.parseProgram
module dependencies: Lattice Syntax
package dependencies: QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.5.4@base-orphans-0.5.4-ABoxiBf7nXc7Qqh66CgYc9
                      bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      comonad-5@comonad-5-3taBO7oiJOm7HwkDYjek6x
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-LOqCz9UiRqn89oyERzBA9D
                      deepseq-1.4.2.0@deepseq-1.4.2.0
                      distributive-0.5.2@distributive-0.5.2-DzhYIvhMV8O6K3jnVc2kgn
                      exceptions-0.8.3@exceptions-0.8.3-Ggtjm8GpjAqJV0BBy1Ma2L
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.5.0@hashable-1.2.5.0-D487ltJkakbBMC5JTPGIXQ
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      profunctors-5.2@profunctors-5.2-LIxTI75q4uF48YzuBFpJUP
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      scientific-0.3.4.10@scientific-0.3.4.10-23m8gsMho2XA7iQioaf2OE
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-DqTYAPqU3ao5zvndQftjsL
                      template-haskell-2.11.1.0
                      text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-2tm9ddmq5Qk3kF2emBuYBK
                      unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E
                      vector-0.11.0.0@vector-0.11.0.0-27QpYeEDQwsDlrhnt04T6e
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.5.0@hashable-1.2.5.0-D487ltJkakbBMC5JTPGIXQ:Data.Hashable.Generic
         main@main:Syntax
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text
         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-27QpYeEDQwsDlrhnt04T6e:Data.Vector.Fusion.Bundle
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Compose base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Tannen
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         main@main:Lattice main@main:Syntax
                         megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Error
                         megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Pos
                         megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Prim
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         tagged-0.8.5@tagged-0.8.5-DqTYAPqU3ao5zvndQftjsL:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text
                         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Lazy
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Bind
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Embed
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Name
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Rebind
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Rec
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Shift
                         vector-0.11.0.0@vector-0.11.0.0-27QpYeEDQwsDlrhnt04T6e:Data.Vector
import  -/  base-4.9.1.0:Control.Applicative 32430a90492e727f4bd80db71c28600c
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Either 20b09ef8d0a5b74fdec011c40c1587f5
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  Lattice 88fcd7154be3313c1d1dd4a146e11a7c
  exports: 495e954e0fa964baf836dbc63274531d
  Any d31dbfda7503d4f86f2969082d8ec7b3
  GLabel 9052b3c150b0d7c7ae0110d0be5cae63
  H 822756534dc3319e98c65d435a5e29d3
  L b53301c5975f0e93d41e38eaa92047ee
  MA 4c0d307943c517ef92e883ff9555c8cd
  MB 967c85c47cc50598ef02ec1d256abe76
import  -/  Syntax 6c120300cbc8be0c354432ee47bcf2aa
  exports: 095bc84ec11cd23a65bba080dc14ddf8
  And e5f6522cae96e6be4474c7061ece58ad
  Annot 221379c6c4d890ad080299c4d1880646
  App 5b715b32b70eb55e4256cd177256255d
  Binding 1c00495f8b82fdc5f4b94a20ffa4f358
  IfThenElse e6feaeb57d26d6c6647f3942b1a7749c
  Implies 0f19081bb497a6f9f9285957314df8d5
  Lam 5b34c8f833ff2c9c793f866b9d302718
  Op 01ccf73c5362f4208b5f138298f072ad
  Or 5e33a6e9779b2498fa7998917ab70708
  TName 6ebfa21d5709e4d46af7a40bb888ccd3
  Term 6ebfa21d5709e4d46af7a40bb888ccd3
  TmFalse e2a44dd27f5d0f5c3a4b02fabb3ea18a
  TmTrue 08e842176e4d2a311638c72667f7cf77
  Val 4410c99ba37d58e1d0c9996a4dd07a70
  Var 8e5fdac9870ed392f8c34cbea521782e
import  -/  megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec 1053b5dc9a1df02ab5401c82fa6ecdf1
import  -/  megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Char 97b4696867d62d8ee7716e1d328016bc
import  -/  megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Combinator 665ee430efc6003746aa541829290eb9
import  -/  megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Error ed2dbf9b05677a19dc51443aa856169a
import  -/  megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Expr 14e866b33b2e3d87a6cebc8dae51fb02
import  -/  megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Lexer 0bce31c7cfac2a3558813f7a7c302caa
import  -/  megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Prim f075cde603d8db2b05befe844c0b06a1
import  -/  megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Text 2413381aeeae78dbee849d6df3def1ee
import  -/  text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text 9ee336888c840d0d73391a6640977abb
import  -/  text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Internal 6acc141272dbd4d1882cabf005fba52c
import  -/  unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless a8a69671ee3f84c700f8a6297dd8e653
import  -/  unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Name 1c2f72bd3f4b997ab8a55e423aaf2370
import  -/  unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Operations 7bcf476ae4d7b1b04d0e51499f1ea789
4217f7a11b2cabb0d06ed1e23006a731
  $s$fAlternativeParsecT ::
    GHC.Base.Alternative
      (Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (m :: * -> *).
                  @ (Text.Megaparsec.Prim.ParsecT
                       Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
                  (Parser.$s$fAlternativeParsecT_$s$fApplicativeParsecT @ m)
                  (Text.Megaparsec.Prim.$fAlternativeParsecT_$cempty
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fAlternativeParsecT_$c<|>
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fAlternativeParsecT_$csome
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fAlternativeParsecT_$cmany
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0) -}
f797ae3c61c5bb1d417c481e6760abc7
  $s$fAlternativeParsecT_$s$fApplicativeParsecT ::
    GHC.Base.Applicative
      (Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (m :: * -> *).
                  @ (Text.Megaparsec.Prim.ParsecT
                       Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
                  (Parser.$s$fAlternativeParsecT_$s$fApplicativeParsecT_$cp1Applicative
                     @ m)
                  (Text.Megaparsec.Prim.$fApplicativeParsecT_$cpure
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fApplicativeParsecT_$c<*>
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fApplicativeParsecT_$c*>
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fApplicativeParsecT_$c<*
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0) -}
266fd50617595195b43a6dd9ff84c8c0
  $s$fAlternativeParsecT_$s$fApplicativeParsecT_$cp1Applicative ::
    GHC.Base.Functor
      (Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Text.Megaparsec.Prim.$fFunctorParsecT
                   @ Text.Megaparsec.Error.Dec
                   @ Data.Text.Internal.Text) -}
1bdafbf43e80b2f03d2f0909abef6ab7
  $s$fMonadParsecT ::
    GHC.Base.Monad
      (Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (m :: * -> *).
                  @ (Text.Megaparsec.Prim.ParsecT
                       Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
                  (Text.Megaparsec.Prim.$fMonadParsecT_$cp1Monad
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecT_$c>>=
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecT_$c>>
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecT_$creturn
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecT_$cfail
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0) -}
3dba12dd0c877d6c90f9d516b053efb2
  $s$fMonadParsecesParsecT ::
    Text.Megaparsec.Prim.MonadParsec
      Text.Megaparsec.Error.Dec
      Data.Text.Internal.Text
      (Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
  {- Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (m :: * -> *).
                  @ Text.Megaparsec.Error.Dec
                  @ Data.Text.Internal.Text
                  @ (Text.Megaparsec.Prim.ParsecT
                       Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
                  (Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$cp1MonadParsec
                     @ m)
                  (Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$cp2MonadParsec
                     @ m)
                  (Parser.$s$fAlternativeParsecT @ m)
                  (Parser.$s$fMonadParsecesParsecT_$s$fMonadPlusParsecT @ m)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$cfailure
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$clabel
                     @ m)
                  (Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$chidden
                     @ m)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$ctry
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$clookAhead
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$cnotFollowedBy
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$cwithRecovery
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$cobserving
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$ceof
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$ctoken
                     @ m)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$ctokens
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$cgetParserState
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fMonadParsecesParsecT_$cupdateParserState
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0) -}
a1ff613792abb2da84f943e84fe84cea
  $s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$chidden ::
    Text.Megaparsec.Prim.ParsecT
      Text.Megaparsec.Error.Dec Data.Text.Internal.Text m a
    -> Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m a
  {- Arity: 6, HasNoCafRefs,
     Strictness: <C(C(C(C(C(S))))),1*C1(C1(C1(C1(C1(U)))))><L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(U)>,
     Unfolding: InlineRule (0, True, False)
                (\ @ (m :: * -> *)
                   @ a
                   (eta11 :: Text.Megaparsec.Prim.ParsecT
                               Text.Megaparsec.Error.Dec Data.Text.Internal.Text m a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (forall b.
                      Text.Megaparsec.Prim.State Data.Text.Internal.Text
                      -> (a
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> m b)
                      -> (Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                      -> (a
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> m b)
                      -> (Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                      -> m b)
                   @ (Text.Megaparsec.Prim.ParsecT
                        Text.Megaparsec.Error.Dec Data.Text.Internal.Text m a)
                   (\ (tpl :: forall b.
                              Text.Megaparsec.Prim.State Data.Text.Internal.Text
                              -> (a
                                  -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                                  -> Text.Megaparsec.Prim.Hints
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                  -> m b)
                              -> (Text.Megaparsec.Error.ParseError
                                    (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                    Text.Megaparsec.Error.Dec
                                  -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                              -> (a
                                  -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                                  -> Text.Megaparsec.Prim.Hints
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                  -> m b)
                              -> (Text.Megaparsec.Error.ParseError
                                    (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                    Text.Megaparsec.Error.Dec
                                  -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                              -> m b) ->
                    tpl)
                     `cast`
                   (<forall b.
                     Text.Megaparsec.Prim.State Data.Text.Internal.Text
                     -> (a
                         -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                         -> Text.Megaparsec.Prim.Hints
                              (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                         -> m b)
                     -> (Text.Megaparsec.Error.ParseError
                           (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                           Text.Megaparsec.Error.Dec
                         -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                     -> (a
                         -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                         -> Text.Megaparsec.Prim.Hints
                              (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                         -> m b)
                     -> (Text.Megaparsec.Error.ParseError
                           (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                           Text.Megaparsec.Error.Dec
                         -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                     -> m b>_R
                    ->_R Sym (Text.Megaparsec.Prim.N:ParsecT[0]
                                  <Text.Megaparsec.Error.Dec>_N
                                  <Data.Text.Internal.Text>_N
                                  <m>_R
                                  <a>_R))
                   (\ @ b
                      (s1 :: Text.Megaparsec.Prim.State Data.Text.Internal.Text)
                      (cok :: a
                              -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                              -> Text.Megaparsec.Prim.Hints
                                   (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                              -> m b)
                      (cerr :: Text.Megaparsec.Error.ParseError
                                 (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                 Text.Megaparsec.Error.Dec
                               -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                      (eok :: a
                              -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                              -> Text.Megaparsec.Prim.Hints
                                   (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                              -> m b)
                      (eerr :: Text.Megaparsec.Error.ParseError
                                 (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                 Text.Megaparsec.Error.Dec
                               -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b) ->
                    let {
                      cl3 :: GHC.Base.Maybe
                               (Text.Megaparsec.Error.ErrorItem
                                  (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                      = Text.Megaparsec.Prim.$fMonadParsecesParsecT_$s<$>
                          @ (Data.List.NonEmpty.NonEmpty GHC.Types.Char)
                          @ (Text.Megaparsec.Error.ErrorItem
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                          (\ (x :: Data.List.NonEmpty.NonEmpty GHC.Types.Char)[OneShot] ->
                           Text.Megaparsec.Error.Label
                             @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                             (Data.Semigroup.$fSemigroupNonEmpty_$c<>
                                @ GHC.Types.Char
                                (Data.List.NonEmpty.fromList
                                   @ GHC.Types.Char
                                   (GHC.Base.build
                                      @ GHC.Types.Char
                                      (\ @ b1 -> GHC.CString.unpackFoldrCString# @ b1 "rest of "#)))
                                x))
                          (Data.List.NonEmpty.nonEmpty
                             @ GHC.Types.Char
                             (GHC.Types.[] @ GHC.Types.Char))
                    } in
                    let {
                      el3 :: GHC.Base.Maybe
                               (Text.Megaparsec.Error.ErrorItem
                                  (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                      = Text.Megaparsec.Prim.$fMonadParsecesParsecT_$s<$>
                          @ (Data.List.NonEmpty.NonEmpty GHC.Types.Char)
                          @ (Text.Megaparsec.Error.ErrorItem
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                          (Text.Megaparsec.Error.Label
                             @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                          (Data.List.NonEmpty.nonEmpty
                             @ GHC.Types.Char
                             (GHC.Types.[] @ GHC.Types.Char))
                    } in
                    Text.Megaparsec.Prim.unParser
                      @ Text.Megaparsec.Error.Dec
                      @ Data.Text.Internal.Text
                      @ m
                      @ a
                      eta11
                      @ b
                      s1
                      (\ (x :: a)
                         (s' :: Text.Megaparsec.Prim.State Data.Text.Internal.Text)
                         (hs :: Text.Megaparsec.Prim.Hints
                                  (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)) ->
                       cok
                         x
                         s'
                         (Text.Megaparsec.Prim.refreshLastHint
                            @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            hs
                            cl3))
                      cerr
                      (\ (x :: a)
                         (s' :: Text.Megaparsec.Prim.State Data.Text.Internal.Text)
                         (hs :: Text.Megaparsec.Prim.Hints
                                  (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)) ->
                       eok
                         x
                         s'
                         (Text.Megaparsec.Prim.refreshLastHint
                            @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            hs
                            el3))
                      (\ (err :: Text.Megaparsec.Error.ParseError
                                   (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                   Text.Megaparsec.Error.Dec) ->
                       eerr
                         (case err of wild { Text.Megaparsec.Error.ParseError ds ds1 ds2 ds3 ->
                          Text.Megaparsec.Error.ParseError
                            @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            @ Text.Megaparsec.Error.Dec
                            ds
                            ds1
                            (Data.Maybe.maybe
                               @ (Data.Set.Base.Set
                                    (Text.Megaparsec.Error.ErrorItem
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                               @ (Text.Megaparsec.Error.ErrorItem
                                    (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                               (Data.Set.Base.Tip
                                  @ (Text.Megaparsec.Error.ErrorItem
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                               (Data.Set.Base.singleton
                                  @ (Text.Megaparsec.Error.ErrorItem
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                               el3)
                            ds3 })))) -}
8562138e4c551032560801137ef13d51
  $s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$clabel ::
    GHC.Base.String
    -> Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m a
    -> Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m a
  {- Arity: 2, Strictness: <L,U><L,C(C1(C1(C1(C1(U)))))>,
     Unfolding: InlineRule (0, True, True)
                (Text.Megaparsec.Prim.pLabel
                   @ Text.Megaparsec.Error.Dec
                   @ Data.Text.Internal.Text) -}
c0382907f9ae054c53db7487fce768a3
  $s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$cp1MonadParsec ::
    Text.Megaparsec.Error.ErrorComponent Text.Megaparsec.Error.Dec
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ (m :: * -> *) -> Text.Megaparsec.Error.$fErrorComponentDec) -}
cab9e5edd4758cb1f0142733c3cc553f
  $s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$cp2MonadParsec ::
    Text.Megaparsec.Prim.Stream Data.Text.Internal.Text
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (\ @ (m :: * -> *) -> Text.Megaparsec.Prim.$fStreamText0) -}
f17f4abec5fab4508fcf7ab7b93026aa
  $s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$ctoken ::
    (Text.Megaparsec.Prim.Token Data.Text.Internal.Text
     -> Data.Either.Either
          (Data.Set.Base.Set
             (Text.Megaparsec.Error.ErrorItem
                (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)),
           Data.Set.Base.Set
             (Text.Megaparsec.Error.ErrorItem
                (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)),
           Data.Set.Base.Set Text.Megaparsec.Error.Dec)
          a)
    -> GHC.Base.Maybe
         (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
    -> Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m a
  {- Arity: 7,
     Strictness: <L,1*C1(U)><L,1*U><S(S(LLS)SLL),1*U(U(U,U,U),U(U(U,U,U),U),U,U(U))><L,1*C1(C1(C1(U)))><L,A><L,A><L,1*C1(C1(U))>,
     Unfolding: InlineRule (0, True, False)
                (\ @ (m :: * -> *)
                   @ a
                   (eta11 :: Text.Megaparsec.Prim.Token Data.Text.Internal.Text
                             -> Data.Either.Either
                                  (Data.Set.Base.Set
                                     (Text.Megaparsec.Error.ErrorItem
                                        (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)),
                                   Data.Set.Base.Set
                                     (Text.Megaparsec.Error.ErrorItem
                                        (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)),
                                   Data.Set.Base.Set Text.Megaparsec.Error.Dec)
                                  a)
                   (eta12 :: GHC.Base.Maybe
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (forall b.
                      Text.Megaparsec.Prim.State Data.Text.Internal.Text
                      -> (a
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> m b)
                      -> (Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                      -> (a
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> m b)
                      -> (Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                      -> m b)
                   @ (Text.Megaparsec.Prim.ParsecT
                        Text.Megaparsec.Error.Dec Data.Text.Internal.Text m a)
                   (\ (tpl :: forall b.
                              Text.Megaparsec.Prim.State Data.Text.Internal.Text
                              -> (a
                                  -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                                  -> Text.Megaparsec.Prim.Hints
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                  -> m b)
                              -> (Text.Megaparsec.Error.ParseError
                                    (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                    Text.Megaparsec.Error.Dec
                                  -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                              -> (a
                                  -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                                  -> Text.Megaparsec.Prim.Hints
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                  -> m b)
                              -> (Text.Megaparsec.Error.ParseError
                                    (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                    Text.Megaparsec.Error.Dec
                                  -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                              -> m b) ->
                    tpl)
                     `cast`
                   (<forall b.
                     Text.Megaparsec.Prim.State Data.Text.Internal.Text
                     -> (a
                         -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                         -> Text.Megaparsec.Prim.Hints
                              (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                         -> m b)
                     -> (Text.Megaparsec.Error.ParseError
                           (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                           Text.Megaparsec.Error.Dec
                         -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                     -> (a
                         -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                         -> Text.Megaparsec.Prim.Hints
                              (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                         -> m b)
                     -> (Text.Megaparsec.Error.ParseError
                           (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                           Text.Megaparsec.Error.Dec
                         -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                     -> m b>_R
                    ->_R Sym (Text.Megaparsec.Prim.N:ParsecT[0]
                                  <Text.Megaparsec.Error.Dec>_N
                                  <Data.Text.Internal.Text>_N
                                  <m>_R
                                  <a>_R))
                   (\ @ b
                      (s1 :: Text.Megaparsec.Prim.State Data.Text.Internal.Text)
                      (cok :: a
                              -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                              -> Text.Megaparsec.Prim.Hints
                                   (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                              -> m b)
                      (ds :: Text.Megaparsec.Error.ParseError
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                               Text.Megaparsec.Error.Dec
                             -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b)
                      (ds1 :: a
                              -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                              -> Text.Megaparsec.Prim.Hints
                                   (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                              -> m b)
                      (eerr :: Text.Megaparsec.Error.ParseError
                                 (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                 Text.Megaparsec.Error.Dec
                               -> Text.Megaparsec.Prim.State Data.Text.Internal.Text -> m b) ->
                    case s1 of wild { Text.Megaparsec.Prim.State input ds2 dt w ->
                    case ds2 of wild1 { Data.List.NonEmpty.:| pos z ->
                    case (Data.Text.uncons input)
                           `cast`
                         (GHC.Base.Maybe
                            ((,)
                               (Sub (Sym (Text.Megaparsec.Prim.D:R:TokenText0[0])))
                               <Data.Text.Internal.Text>_R)_R)_R of wild2 {
                      GHC.Base.Nothing
                      -> eerr
                           (Text.Megaparsec.Error.ParseError
                              @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                              @ Text.Megaparsec.Error.Dec
                              (Data.List.NonEmpty.:| @ Text.Megaparsec.Pos.SourcePos pos z)
                              (Data.Set.Base.Bin
                                 @ (Text.Megaparsec.Error.ErrorItem
                                      (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                                 1#
                                 (Text.Megaparsec.Error.EndOfInput
                                    @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                                 (Data.Set.Base.Tip
                                    @ (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                                 (Data.Set.Base.Tip
                                    @ (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))))
                              (Data.Maybe.maybe
                                 @ (Data.Set.Base.Set
                                      (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                                 @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                 (Data.Set.Base.Tip
                                    @ (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                                 (\ (x :: Text.Megaparsec.Prim.Token
                                            Data.Text.Internal.Text)[OneShot] ->
                                  Data.Set.Base.Bin
                                    @ (Text.Megaparsec.Error.ErrorItem
                                         (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                                    1#
                                    (Text.Megaparsec.Error.Tokens
                                       @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                       (Text.Megaparsec.Prim.nes
                                          @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                          x))
                                    (Data.Set.Base.Tip
                                       @ (Text.Megaparsec.Error.ErrorItem
                                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                                    (Data.Set.Base.Tip
                                       @ (Text.Megaparsec.Error.ErrorItem
                                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))))
                                 eta12)
                              (Data.Set.Base.Tip @ Text.Megaparsec.Error.Dec))
                           wild
                      GHC.Base.Just ds3
                      -> case ds3 of wild3 { (,) c cs ->
                         case eta11 c of wild4 {
                           Data.Either.Left ds4
                           -> case ds4 of wild5 { (,,) us ps xs ->
                              case GHC.Base.const
                                     @ (Text.Megaparsec.Pos.Pos
                                        -> Text.Megaparsec.Pos.SourcePos
                                        -> GHC.Types.Char
                                        -> (Text.Megaparsec.Pos.SourcePos,
                                            Text.Megaparsec.Pos.SourcePos))
                                     @ (Data.Proxy.Proxy Data.Text.Internal.Text)
                                     Text.Megaparsec.Pos.defaultUpdatePos
                                     (Data.Proxy.Proxy @ * @ Data.Text.Internal.Text)
                                     w
                                     pos
                                     c `cast`
                                     (Sub (Text.Megaparsec.Prim.D:R:TokenText0[0])) of wild6 { (,) apos npos ->
                              case apos of apos1 { Text.Megaparsec.Pos.SourcePos ipv ipv1 ipv2 ->
                              eerr
                                (Text.Megaparsec.Error.ParseError
                                   @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                   @ Text.Megaparsec.Error.Dec
                                   (Data.List.NonEmpty.:| @ Text.Megaparsec.Pos.SourcePos apos1 z)
                                   us
                                   ps
                                   xs)
                                (Text.Megaparsec.Prim.State
                                   @ Data.Text.Internal.Text
                                   input
                                   (Data.List.NonEmpty.:| @ Text.Megaparsec.Pos.SourcePos apos1 z)
                                   dt
                                   w) } } }
                           Data.Either.Right x
                           -> case GHC.Base.const
                                     @ (Text.Megaparsec.Pos.Pos
                                        -> Text.Megaparsec.Pos.SourcePos
                                        -> GHC.Types.Char
                                        -> (Text.Megaparsec.Pos.SourcePos,
                                            Text.Megaparsec.Pos.SourcePos))
                                     @ (Data.Proxy.Proxy Data.Text.Internal.Text)
                                     Text.Megaparsec.Pos.defaultUpdatePos
                                     (Data.Proxy.Proxy @ * @ Data.Text.Internal.Text)
                                     w
                                     pos
                                     c `cast`
                                     (Sub (Text.Megaparsec.Prim.D:R:TokenText0[0])) of wild5 { (,) apos npos ->
                              case npos of npos1 { Text.Megaparsec.Pos.SourcePos ipv ipv1 ipv2 ->
                              cok
                                x
                                (case GHC.Num.$fNumWord_$c+
                                        (GHC.Types.W# dt)
                                        (GHC.Types.W# 1##) of dt1 { GHC.Types.W# dt2 ->
                                 Text.Megaparsec.Prim.State
                                   @ Data.Text.Internal.Text
                                   cs
                                   (Data.List.NonEmpty.:| @ Text.Megaparsec.Pos.SourcePos npos1 z)
                                   dt2
                                   w })
                                (Text.Megaparsec.Prim.$fApplicativeParsecT_$cmempty
                                   @ (Text.Megaparsec.Prim.Token
                                        Data.Text.Internal.Text)) } } } } } } })) -}
948e4c74f89f3ded37091783dd49724b
  $s$fMonadParsecesParsecT_$s$fMonadPlusParsecT ::
    GHC.Base.MonadPlus
      (Text.Megaparsec.Prim.ParsecT
         Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (m :: * -> *).
                  @ (Text.Megaparsec.Prim.ParsecT
                       Text.Megaparsec.Error.Dec Data.Text.Internal.Text m)
                  (Text.Megaparsec.Prim.$fMonadPlusParsecT_$cp1MonadPlus
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Parser.$s$fMonadParsecT @ m)
                  (Text.Megaparsec.Prim.$fAlternativeParsecT_$cmzero
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0)
                  (Text.Megaparsec.Prim.$fAlternativeParsecT_$cmplus
                     @ Text.Megaparsec.Error.Dec
                     @ Data.Text.Internal.Text
                     @ m
                     Text.Megaparsec.Error.$fErrorComponentDec
                     Text.Megaparsec.Prim.$fStreamText0) -}
f0a0f59f5f25fe61cacd5ca0b1e46baa
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Parser.$trModule2
                   Parser.$trModule1) -}
3bb112fe95a6a1ba67f7413689a4712f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Parser"#) -}
9ac4f0eece8cebd95bd00f913c45b738
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
ba4bca23ea90a9b09108b992b32e729e
  $wrawData ::
    GHC.Prim.ByteArray#
    -> GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> Text.Megaparsec.Pos.SourcePos
    -> [Text.Megaparsec.Pos.SourcePos]
    -> GHC.Prim.Word#
    -> Text.Megaparsec.Pos.Pos
    -> (()
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 9, HasNoCafRefs,
     Strictness: <L,U><L,U><S,U><L,U(U,U,U)><L,U><L,U><L,U><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: [0],
     Unfolding: (\ @ b
                   (ww :: GHC.Prim.ByteArray#)
                   (ww1 :: GHC.Prim.Int#)
                   (ww2 :: GHC.Prim.Int#)
                   (ww3 :: Text.Megaparsec.Pos.SourcePos)
                   (ww4 :: [Text.Megaparsec.Pos.SourcePos])
                   (ww5 :: GHC.Prim.Word#)
                   (ww6 :: Text.Megaparsec.Pos.Pos)
                   (w :: ()
                         -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                         -> Text.Megaparsec.Prim.Hints
                              (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                         -> Data.Functor.Identity.Identity b)
                   (w1 :: Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Data.Functor.Identity.Identity b) ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.<=# ww2 0#) of wild1 {
                   GHC.Types.False
                   -> case GHC.Prim.indexWord16Array# ww ww1 of r# { DEFAULT ->
                      let {
                        $w$j :: Text.Megaparsec.Prim.Token Data.Text.Internal.Text
                                -> Data.Functor.Identity.Identity b
                          {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                        = \ (w2 :: Text.Megaparsec.Prim.Token
                                     Data.Text.Internal.Text)[OneShot] ->
                          case ww3 of ww7 { Text.Megaparsec.Pos.SourcePos ww8 ww9 ww10 ->
                          w1
                            (Text.Megaparsec.Error.ParseError
                               @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                               @ Text.Megaparsec.Error.Dec
                               (Data.List.NonEmpty.:| @ Text.Megaparsec.Pos.SourcePos ww7 ww4)
                               (Data.Set.Base.Bin
                                  @ (Text.Megaparsec.Error.ErrorItem
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                                  1#
                                  (Text.Megaparsec.Error.Tokens
                                     @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                     (Text.Megaparsec.Prim.nes
                                        @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                        w2))
                                  (Data.Set.Base.Tip
                                     @ (Text.Megaparsec.Error.ErrorItem
                                          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                                  (Data.Set.Base.Tip
                                     @ (Text.Megaparsec.Error.ErrorItem
                                          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))))
                               Parser.parseProgram3
                               (Data.Set.Base.Tip @ Text.Megaparsec.Error.Dec))
                            (Text.Megaparsec.Prim.State
                               @ Data.Text.Internal.Text
                               (Data.Text.Internal.Text ww ww1 ww2)
                               (Data.List.NonEmpty.:| @ Text.Megaparsec.Pos.SourcePos ww7 ww4)
                               ww5
                               ww6) }
                      } in
                      case GHC.Prim.tagToEnum#
                             @ GHC.Types.Bool
                             (GHC.Prim.ltWord# r# 55296##) of wild2 {
                        GHC.Types.False
                        -> case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.gtWord# r# 56319##) of wild3 {
                             GHC.Types.False
                             -> case GHC.Prim.indexWord16Array#
                                       ww
                                       (GHC.Prim.+# ww1 1#) of r#1 { DEFAULT ->
                                $w$j
                                  (GHC.Types.C#
                                     (GHC.Prim.chr#
                                        (GHC.Prim.+#
                                           (GHC.Prim.+#
                                              (GHC.Prim.uncheckedIShiftL#
                                                 (GHC.Prim.-# (GHC.Prim.word2Int# r#) 55296#)
                                                 10#)
                                              (GHC.Prim.-# (GHC.Prim.word2Int# r#1) 56320#))
                                           65536#)))
                                    `cast`
                                  (Sub (Sym (Text.Megaparsec.Prim.D:R:TokenText0[0]))) }
                             GHC.Types.True
                             -> $w$j
                                  (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                    `cast`
                                  (Sub (Sym (Text.Megaparsec.Prim.D:R:TokenText0[0]))) }
                        GHC.Types.True
                        -> $w$j
                             (GHC.Types.C# (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                               `cast`
                             (Sub (Sym (Text.Megaparsec.Prim.D:R:TokenText0[0]))) } }
                   GHC.Types.True
                   -> w GHC.Tuple.()
                        (Text.Megaparsec.Prim.State
                           @ Data.Text.Internal.Text
                           (Data.Text.Internal.Text ww ww1 ww2)
                           (Data.List.NonEmpty.:| @ Text.Megaparsec.Pos.SourcePos ww3 ww4)
                           ww5
                           ww6)
                        (GHC.Types.[]
                           @ (Data.Set.Base.Set
                                (Text.Megaparsec.Error.ErrorItem
                                   (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))))
                          `cast`
                        (Sym (Text.Megaparsec.Prim.N:Hints[0]
                                  <Text.Megaparsec.Prim.Token Data.Text.Internal.Text>_N)) }) -}
17187781e8d138d837f1d9a1489b0463
  $wrawData1 ::
    Text.Megaparsec.Prim.State Data.Text.Internal.Text
    -> ([Data.Either.Either
           (Text.Megaparsec.Error.ParseError
              GHC.Types.Char Text.Megaparsec.Error.Dec)
           Syntax.Binding]
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> ([Data.Either.Either
           (Text.Megaparsec.Error.ParseError
              GHC.Types.Char Text.Megaparsec.Error.Dec)
           Syntax.Binding]
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 4, Strictness: <L,U><L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ @ b
                   (w :: Text.Megaparsec.Prim.State Data.Text.Internal.Text)
                   (w1 :: [Data.Either.Either
                             (Text.Megaparsec.Error.ParseError
                                GHC.Types.Char Text.Megaparsec.Error.Dec)
                             Syntax.Binding]
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: [Data.Either.Either
                             (Text.Megaparsec.Error.ParseError
                                GHC.Types.Char Text.Megaparsec.Error.Dec)
                             Syntax.Binding]
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> Data.Functor.Identity.Identity b) ->
                 Parser.parseProgram_eta
                   `cast`
                 (Text.Megaparsec.Prim.N:ParsecT[0]
                      <Text.Megaparsec.Error.Dec>_N
                      <Data.Text.Internal.Text>_N
                      <Data.Functor.Identity.Identity>_R
                      <[Data.Either.Either
                          (Text.Megaparsec.Error.ParseError
                             GHC.Types.Char Text.Megaparsec.Error.Dec)
                          Syntax.Binding]>_R)
                   @ b
                   w
                   w1
                   w2
                   w3
                   (\ (err :: Text.Megaparsec.Error.ParseError
                                (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                                Text.Megaparsec.Error.Dec)
                      (ms :: Text.Megaparsec.Prim.State Data.Text.Internal.Text) ->
                    w3
                      (GHC.Types.[]
                         @ (Data.Either.Either
                              (Text.Megaparsec.Error.ParseError
                                 GHC.Types.Char Text.Megaparsec.Error.Dec)
                              Syntax.Binding))
                      w
                      (case err of wild { Text.Megaparsec.Error.ParseError ds1 ds2 ds3 ds4 ->
                       case ds3 of wild1 {
                         Data.Set.Base.Bin dt ds7 ds8 ds9
                         -> (GHC.Types.:
                               @ (Data.Set.Base.Set
                                    (Text.Megaparsec.Error.ErrorItem
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                               wild1
                               (GHC.Types.[]
                                  @ (Data.Set.Base.Set
                                       (Text.Megaparsec.Error.ErrorItem
                                          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))))
                              `cast`
                            (Sym (Text.Megaparsec.Prim.N:Hints[0]
                                      <Text.Megaparsec.Prim.Token Data.Text.Internal.Text>_N))
                         Data.Set.Base.Tip
                         -> (GHC.Types.[]
                               @ (Data.Set.Base.Set
                                    (Text.Megaparsec.Error.ErrorItem
                                       (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))))
                              `cast`
                            (Sym (Text.Megaparsec.Prim.N:Hints[0]
                                      <Text.Megaparsec.Prim.Token
                                         Data.Text.Internal.Text>_N)) } }))) -}
bd20b536fbe359b585bb1ad1c48ccd6b
  type RawData t e =
    [Data.Either.Either
       (Text.Megaparsec.Error.ParseError t e) Syntax.Term]
d145969d3db4b067d2f481b767b24d4a
  decl :: Text.Megaparsec.Text.Parser Syntax.Binding
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))>,
     Unfolding: InlineRule (0, True, True)
                Parser.decl1
                  `cast`
                (Sym (Text.Megaparsec.Prim.N:ParsecT[0]
                          <Text.Megaparsec.Error.Dec>_N
                          <Data.Text.Internal.Text>_N
                          <Data.Functor.Identity.Identity>_R
                          <Syntax.Binding>_R)) -}
67522fd35225fcf47db5631790ccc55a
  decl1 ::
    Text.Megaparsec.Prim.State Data.Text.Internal.Text
    -> (Syntax.Binding
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> (Syntax.Binding
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5,
     Strictness: <L,U><L,C(C1(C1(U)))><L,U><L,C(C1(C1(U)))><L,C(C1(U))> -}
6618d358762095f2bb0e06192a0998ca
  lineCmnt :: Text.Megaparsec.Text.Parser ()
  {- Unfolding: (Text.Megaparsec.Lexer.skipLineComment
                   @ Text.Megaparsec.Error.Dec
                   @ Data.Text.Internal.Text
                   @ (Text.Megaparsec.Prim.ParsecT
                        Text.Megaparsec.Error.Dec
                        Data.Text.Internal.Text
                        Data.Functor.Identity.Identity)
                   (Parser.$s$fMonadParsecesParsecT @ Data.Functor.Identity.Identity)
                   (GHC.Types.Eq#
                      @ *
                      @ *
                      @ GHC.Types.Char
                      @ GHC.Types.Char
                      @~ <GHC.Types.Char>_N)
                     `cast`
                   (Sym (Data.Type.Equality.N:~[0]
                             <*>_N) (Sym (Text.Megaparsec.Prim.D:R:TokenText0[0])) <GHC.Types.Char>_N)
                   Parser.parseProgram7) -}
dcaf9d671fd357c89abeadcd9dfdb3f3
  parseProgram ::
    GHC.Base.String
    -> Data.Text.Internal.Text
    -> Data.Either.Either
         (Text.Megaparsec.Error.ParseError
            GHC.Types.Char Text.Megaparsec.Error.Dec)
         [Data.Either.Either
            (Text.Megaparsec.Error.ParseError
               GHC.Types.Char Text.Megaparsec.Error.Dec)
            Syntax.Binding]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: InlineRule (0, True, True)
                Parser.parseProgram1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <Data.Text.Internal.Text>_R
                 ->_R (Data.Either.Either
                         (Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.D:R:TokenText0[0])
                            <Text.Megaparsec.Error.Dec>_N)_R
                         <[Data.Either.Either
                             (Text.Megaparsec.Error.ParseError
                                GHC.Types.Char Text.Megaparsec.Error.Dec)
                             Syntax.Binding]>_R)_R) -}
b1898824870763e05fe84a362d70118f
  parseProgram1 ::
    GHC.Base.String
    -> Data.Text.Internal.Text
    -> Data.Either.Either
         (Text.Megaparsec.Error.ParseError
            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
            Text.Megaparsec.Error.Dec)
         [Data.Either.Either
            (Text.Megaparsec.Error.ParseError
               GHC.Types.Char Text.Megaparsec.Error.Dec)
            Syntax.Binding]
  {- Arity: 2, Strictness: <L,U><L,U>,
     Unfolding: (\ (name :: GHC.Base.String)
                   (s1 :: Data.Text.Internal.Text) ->
                 case (Text.Megaparsec.Prim.$w$c<*
                         @ Text.Megaparsec.Error.Dec
                         @ Data.Text.Internal.Text
                         @ Data.Functor.Identity.Identity
                         Text.Megaparsec.Prim.$fStreamText0
                         @ [Data.Either.Either
                              (Text.Megaparsec.Error.ParseError
                                 GHC.Types.Char Text.Megaparsec.Error.Dec)
                              Syntax.Binding]
                         @ ()
                         Parser.parseProgram4
                           `cast`
                         (Sym (Text.Megaparsec.Prim.N:ParsecT[0]
                                   <Text.Megaparsec.Error.Dec>_N
                                   <Data.Text.Internal.Text>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <[Data.Either.Either
                                       (Text.Megaparsec.Error.ParseError
                                          GHC.Types.Char Text.Megaparsec.Error.Dec)
                                       Syntax.Binding]>_R))
                         Parser.parseProgram2
                           `cast`
                         (Sym (Text.Megaparsec.Prim.N:ParsecT[0]
                                   <Text.Megaparsec.Error.Dec>_N
                                   <Data.Text.Internal.Text>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <()>_R))
                         @ (Text.Megaparsec.Prim.Reply
                              Text.Megaparsec.Error.Dec
                              Data.Text.Internal.Text
                              [Data.Either.Either
                                 (Text.Megaparsec.Error.ParseError
                                    GHC.Types.Char Text.Megaparsec.Error.Dec)
                                 Syntax.Binding])
                         (Text.Megaparsec.Prim.State
                            @ Data.Text.Internal.Text
                            s1
                            (Data.List.NonEmpty.:|
                               @ Text.Megaparsec.Pos.SourcePos
                               (Text.Megaparsec.Pos.initialPos name)
                               (GHC.Types.[] @ Text.Megaparsec.Pos.SourcePos))
                            0##
                            Text.Megaparsec.Pos.defaultTabWidth_x
                              `cast`
                            (Sym (Text.Megaparsec.Pos.N:Pos[0])))
                         (Text.Megaparsec.Prim.$fMonadContParsecT5
                            @ Text.Megaparsec.Error.Dec
                            @ Data.Text.Internal.Text
                            @ [Data.Either.Either
                                 (Text.Megaparsec.Error.ParseError
                                    GHC.Types.Char Text.Megaparsec.Error.Dec)
                                 Syntax.Binding])
                           `cast`
                         (<[Data.Either.Either
                              (Text.Megaparsec.Error.ParseError
                                 GHC.Types.Char Text.Megaparsec.Error.Dec)
                              Syntax.Binding]>_R
                          ->_R <Text.Megaparsec.Prim.State Data.Text.Internal.Text>_R
                          ->_R <Text.Megaparsec.Prim.Hints
                                  (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Megaparsec.Prim.Reply
                                           Text.Megaparsec.Error.Dec
                                           Data.Text.Internal.Text
                                           [Data.Either.Either
                                              (Text.Megaparsec.Error.ParseError
                                                 GHC.Types.Char Text.Megaparsec.Error.Dec)
                                              Syntax.Binding]>_R))
                         (Text.Megaparsec.Prim.$fMonadContParsecT4
                            @ [Data.Either.Either
                                 (Text.Megaparsec.Error.ParseError
                                    GHC.Types.Char Text.Megaparsec.Error.Dec)
                                 Syntax.Binding]
                            @ Data.Text.Internal.Text
                            @ Text.Megaparsec.Error.Dec)
                           `cast`
                         (<Text.Megaparsec.Error.ParseError
                             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                             Text.Megaparsec.Error.Dec>_R
                          ->_R <Text.Megaparsec.Prim.State Data.Text.Internal.Text>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Megaparsec.Prim.Reply
                                           Text.Megaparsec.Error.Dec
                                           Data.Text.Internal.Text
                                           [Data.Either.Either
                                              (Text.Megaparsec.Error.ParseError
                                                 GHC.Types.Char Text.Megaparsec.Error.Dec)
                                              Syntax.Binding]>_R))
                         (Text.Megaparsec.Prim.$fMonadContParsecT3
                            @ Text.Megaparsec.Error.Dec
                            @ Data.Text.Internal.Text
                            @ [Data.Either.Either
                                 (Text.Megaparsec.Error.ParseError
                                    GHC.Types.Char Text.Megaparsec.Error.Dec)
                                 Syntax.Binding])
                           `cast`
                         (<[Data.Either.Either
                              (Text.Megaparsec.Error.ParseError
                                 GHC.Types.Char Text.Megaparsec.Error.Dec)
                              Syntax.Binding]>_R
                          ->_R <Text.Megaparsec.Prim.State Data.Text.Internal.Text>_R
                          ->_R <Text.Megaparsec.Prim.Hints
                                  (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Megaparsec.Prim.Reply
                                           Text.Megaparsec.Error.Dec
                                           Data.Text.Internal.Text
                                           [Data.Either.Either
                                              (Text.Megaparsec.Error.ParseError
                                                 GHC.Types.Char Text.Megaparsec.Error.Dec)
                                              Syntax.Binding]>_R))
                         (Text.Megaparsec.Prim.$fMonadContParsecT2
                            @ [Data.Either.Either
                                 (Text.Megaparsec.Error.ParseError
                                    GHC.Types.Char Text.Megaparsec.Error.Dec)
                                 Syntax.Binding]
                            @ Data.Text.Internal.Text
                            @ Text.Megaparsec.Error.Dec)
                           `cast`
                         (<Text.Megaparsec.Error.ParseError
                             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                             Text.Megaparsec.Error.Dec>_R
                          ->_R <Text.Megaparsec.Prim.State Data.Text.Internal.Text>_R
                          ->_R Sym (Data.Functor.Identity.N:Identity[0]
                                        <Text.Megaparsec.Prim.Reply
                                           Text.Megaparsec.Error.Dec
                                           Data.Text.Internal.Text
                                           [Data.Either.Either
                                              (Text.Megaparsec.Error.ParseError
                                                 GHC.Types.Char Text.Megaparsec.Error.Dec)
                                              Syntax.Binding]>_R)))
                        `cast`
                      (Data.Functor.Identity.N:Identity[0]
                           <Text.Megaparsec.Prim.Reply
                              Text.Megaparsec.Error.Dec
                              Data.Text.Internal.Text
                              [Data.Either.Either
                                 (Text.Megaparsec.Error.ParseError
                                    GHC.Types.Char Text.Megaparsec.Error.Dec)
                                 Syntax.Binding]>_R) of wild { Text.Megaparsec.Prim.Reply s' ds result ->
                 case result of wild1 {
                   Text.Megaparsec.Prim.OK x
                   -> Data.Either.Right
                        @ (Text.Megaparsec.Error.ParseError
                             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                             Text.Megaparsec.Error.Dec)
                        @ [Data.Either.Either
                             (Text.Megaparsec.Error.ParseError
                                GHC.Types.Char Text.Megaparsec.Error.Dec)
                             Syntax.Binding]
                        x
                   Text.Megaparsec.Prim.Error e1
                   -> Data.Either.Left
                        @ (Text.Megaparsec.Error.ParseError
                             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                             Text.Megaparsec.Error.Dec)
                        @ [Data.Either.Either
                             (Text.Megaparsec.Error.ParseError
                                GHC.Types.Char Text.Megaparsec.Error.Dec)
                             Syntax.Binding]
                        e1 } }) -}
4af6d03aadbbad8b01993f058b23bdd2
  parseProgram2 ::
    Text.Megaparsec.Prim.State Data.Text.Internal.Text
    -> (()
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Strictness: <S(S(LLS)SLL),1*U(U(U,U,U),U(U(U,U,U),U),U,U)><L,A><L,A><L,1*C1(C1(C1(U)))><L,1*C1(C1(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ @ b
                   (w :: Text.Megaparsec.Prim.State Data.Text.Internal.Text)
                   (w1 :: ()
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: ()
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Data.Functor.Identity.Identity b) ->
                 case w of ww { Text.Megaparsec.Prim.State ww1 ww2 ww3 ww4 ->
                 case ww1 of ww5 { Data.Text.Internal.Text ww6 ww7 ww8 ->
                 case ww2 of ww9 { Data.List.NonEmpty.:| ww10 ww11 ->
                 Parser.$wrawData @ b ww6 ww7 ww8 ww10 ww11 ww3 ww4 w3 w4 } } }) -}
34f20b4080cc5b562c6eae534a579f4a
  parseProgram3 ::
    Data.Set.Base.Set
      (Text.Megaparsec.Error.ErrorItem
         (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
  {- HasNoCafRefs,
     Unfolding: (Data.Set.Base.Bin
                   @ (Text.Megaparsec.Error.ErrorItem
                        (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                   1#
                   (Text.Megaparsec.Error.EndOfInput
                      @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text))
                   (Data.Set.Base.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                   (Data.Set.Base.Tip
                      @ (Text.Megaparsec.Error.ErrorItem
                           (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))) -}
dff51000993391af8872473e8a0145e9
  parseProgram4 ::
    Text.Megaparsec.Prim.State Data.Text.Internal.Text
    -> ([Data.Either.Either
           (Text.Megaparsec.Error.ParseError
              GHC.Types.Char Text.Megaparsec.Error.Dec)
           Syntax.Binding]
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b1)
    -> ([Data.Either.Either
           (Text.Megaparsec.Error.ParseError
              GHC.Types.Char Text.Megaparsec.Error.Dec)
           Syntax.Binding]
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,C(C1(C1(U)))><L,U>,
     Unfolding: InlineRule (5, True, False)
                (\ @ b1
                   (w4 :: Text.Megaparsec.Prim.State Data.Text.Internal.Text)
                   (w5 :: [Data.Either.Either
                             (Text.Megaparsec.Error.ParseError
                                GHC.Types.Char Text.Megaparsec.Error.Dec)
                             Syntax.Binding]
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> Data.Functor.Identity.Identity b1)
                   (w6 :: Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Data.Functor.Identity.Identity b1)
                   (w7 :: [Data.Either.Either
                             (Text.Megaparsec.Error.ParseError
                                GHC.Types.Char Text.Megaparsec.Error.Dec)
                             Syntax.Binding]
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> Data.Functor.Identity.Identity b1)
                   (w8 :: Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Data.Functor.Identity.Identity b1) ->
                 Text.Megaparsec.Prim.$w$c*>
                   @ Text.Megaparsec.Error.Dec
                   @ Data.Text.Internal.Text
                   @ Data.Functor.Identity.Identity
                   Text.Megaparsec.Prim.$fStreamText0
                   @ ()
                   @ [Data.Either.Either
                        (Text.Megaparsec.Error.ParseError
                           GHC.Types.Char Text.Megaparsec.Error.Dec)
                        Syntax.Binding]
                   Parser.scn
                   Parser.parseProgram5
                     `cast`
                   (Sym (Text.Megaparsec.Prim.N:ParsecT[0]
                             <Text.Megaparsec.Error.Dec>_N
                             <Data.Text.Internal.Text>_N
                             <Data.Functor.Identity.Identity>_R
                             <[Data.Either.Either
                                 (Text.Megaparsec.Error.ParseError
                                    GHC.Types.Char Text.Megaparsec.Error.Dec)
                                 Syntax.Binding]>_R))
                   @ b1
                   w4
                   w5
                   w6
                   w7
                   w8) -}
9d83371d2b97f367f79395e57c101052
  parseProgram5 ::
    Text.Megaparsec.Prim.State Data.Text.Internal.Text
    -> ([Data.Either.Either
           (Text.Megaparsec.Error.ParseError
              GHC.Types.Char Text.Megaparsec.Error.Dec)
           Syntax.Binding]
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> ([Data.Either.Either
           (Text.Megaparsec.Error.ParseError
              GHC.Types.Char Text.Megaparsec.Error.Dec)
           Syntax.Binding]
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,U><L,A>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, True)
                (\ @ b
                   (w :: Text.Megaparsec.Prim.State Data.Text.Internal.Text)
                   (w1 :: [Data.Either.Either
                             (Text.Megaparsec.Error.ParseError
                                GHC.Types.Char Text.Megaparsec.Error.Dec)
                             Syntax.Binding]
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> Data.Functor.Identity.Identity b)
                   (w2 :: Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Data.Functor.Identity.Identity b)
                   (w3 :: [Data.Either.Either
                             (Text.Megaparsec.Error.ParseError
                                GHC.Types.Char Text.Megaparsec.Error.Dec)
                             Syntax.Binding]
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Text.Megaparsec.Prim.Hints
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                          -> Data.Functor.Identity.Identity b)
                   (w4 :: Text.Megaparsec.Error.ParseError
                            (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                            Text.Megaparsec.Error.Dec
                          -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                          -> Data.Functor.Identity.Identity b) ->
                 Parser.$wrawData1 @ b w w1 w2 w3) -}
6c9c972fc79adf1000a654fc2a651dea
  parseProgram6 ::
    Text.Megaparsec.Prim.State Data.Text.Internal.Text
    -> (()
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> (()
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5, HasNoCafRefs,
     Unfolding: (\ @ b
                   (eta11 :: Text.Megaparsec.Prim.State Data.Text.Internal.Text)
                   (eta12 :: ()
                             -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                             -> Text.Megaparsec.Prim.Hints
                                  (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                             -> Data.Functor.Identity.Identity b)
                   (eta13 :: Text.Megaparsec.Error.ParseError
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                               Text.Megaparsec.Error.Dec
                             -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                             -> Data.Functor.Identity.Identity b)
                   (eta14 :: ()
                             -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                             -> Text.Megaparsec.Prim.Hints
                                  (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                             -> Data.Functor.Identity.Identity b)
                   (eta15 :: Text.Megaparsec.Error.ParseError
                               (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                               Text.Megaparsec.Error.Dec
                             -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
                             -> Data.Functor.Identity.Identity b) ->
                 case eta11 of wild { Text.Megaparsec.Prim.State ds3 pos dt ds4 ->
                 eta15
                   (Text.Megaparsec.Error.ParseError
                      @ (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
                      @ Text.Megaparsec.Error.Dec
                      pos
                      (Data.Set.Base.Tip
                         @ (Text.Megaparsec.Error.ErrorItem
                              (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                      (Data.Set.Base.Tip
                         @ (Text.Megaparsec.Error.ErrorItem
                              (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)))
                      (Data.Set.Base.Tip @ Text.Megaparsec.Error.Dec))
                   wild }) -}
96f47766bee200cac6031d2aa244cc13
  parseProgram7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "#"#) -}
78135364439d87e11f3fd24c2ec97c1f
  parseProgram8 ::
    Text.Megaparsec.Prim.State Data.Text.Internal.Text
    -> (()
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b1)
    -> (()
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b1)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b1)
    -> Data.Functor.Identity.Identity b1
  {- Arity: 5 -}
7bbb184c5c65640064c751cd068f3016
  parseProgram9 ::
    Text.Megaparsec.Prim.State Data.Text.Internal.Text
    -> (Data.Either.Either
          (Text.Megaparsec.Error.ParseError
             GHC.Types.Char Text.Megaparsec.Error.Dec)
          Syntax.Binding
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> (Data.Either.Either
          (Text.Megaparsec.Error.ParseError
             GHC.Types.Char Text.Megaparsec.Error.Dec)
          Syntax.Binding
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Text.Megaparsec.Prim.Hints
             (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
        -> Data.Functor.Identity.Identity b)
    -> (Text.Megaparsec.Error.ParseError
          (Text.Megaparsec.Prim.Token Data.Text.Internal.Text)
          Text.Megaparsec.Error.Dec
        -> Text.Megaparsec.Prim.State Data.Text.Internal.Text
        -> Data.Functor.Identity.Identity b)
    -> Data.Functor.Identity.Identity b
  {- Arity: 5 -}
09f1d5e9e6f2512a46980490ecbff8f5
  parseProgram_eta ::
    Text.Megaparsec.Prim.ParsecT
      Text.Megaparsec.Error.Dec
      Data.Text.Internal.Text
      Data.Functor.Identity.Identity
      [Data.Either.Either
         (Text.Megaparsec.Error.ParseError
            GHC.Types.Char Text.Megaparsec.Error.Dec)
         Syntax.Binding]
  {- Unfolding: (Text.Megaparsec.Combinator.sepEndBy1
                   @ (Text.Megaparsec.Prim.ParsecT
                        Text.Megaparsec.Error.Dec
                        Data.Text.Internal.Text
                        Data.Functor.Identity.Identity)
                   @ (Data.Either.Either
                        (Text.Megaparsec.Error.ParseError
                           GHC.Types.Char Text.Megaparsec.Error.Dec)
                        Syntax.Binding)
                   @ ()
                   (Parser.$s$fAlternativeParsecT @ Data.Functor.Identity.Identity)
                   Parser.parseProgram9
                     `cast`
                   (Sym (Text.Megaparsec.Prim.N:ParsecT[0]
                             <Text.Megaparsec.Error.Dec>_N
                             <Data.Text.Internal.Text>_N
                             <Data.Functor.Identity.Identity>_R
                             <Data.Either.Either
                                (Text.Megaparsec.Error.ParseError
                                   GHC.Types.Char Text.Megaparsec.Error.Dec)
                                Syntax.Binding>_R))
                   Parser.scn) -}
97596d92d3cbf0165b73d82c280fcbe7
  scn :: Text.Megaparsec.Text.Parser ()
  {- Unfolding: (Text.Megaparsec.Lexer.space
                   @ Text.Megaparsec.Error.Dec
                   @ Data.Text.Internal.Text
                   @ (Text.Megaparsec.Prim.ParsecT
                        Text.Megaparsec.Error.Dec
                        Data.Text.Internal.Text
                        Data.Functor.Identity.Identity)
                   (Parser.$s$fMonadParsecesParsecT @ Data.Functor.Identity.Identity)
                   Parser.parseProgram8
                     `cast`
                   (Sym (Text.Megaparsec.Prim.N:ParsecT[0]
                             <Text.Megaparsec.Error.Dec>_N
                             <Data.Text.Internal.Text>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))
                   Parser.lineCmnt
                   Parser.parseProgram6
                     `cast`
                   (Sym (Text.Megaparsec.Prim.N:ParsecT[0]
                             <Text.Megaparsec.Error.Dec>_N
                             <Data.Text.Internal.Text>_N
                             <Data.Functor.Identity.Identity>_R
                             <()>_R))) -}
"SPEC/Parser $fAlternativeParsecT @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                          -> *)
                                                                  ($dStream :: Text.Megaparsec.Prim.Stream
                                                                                 Data.Text.Internal.Text)
                                                                  ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                         Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fAlternativeParsecT @ Text.Megaparsec.Error.Dec
                                            @ Data.Text.Internal.Text
                                            @ m
                                            $dErrorComponent
                                            $dStream
  = Parser.$s$fAlternativeParsecT @ m
"SPEC/Parser $fApplicativeParsecT @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                          -> *)
                                                                  ($dStream :: Text.Megaparsec.Prim.Stream
                                                                                 Data.Text.Internal.Text)
                                                                  ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                         Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fApplicativeParsecT @ Text.Megaparsec.Error.Dec
                                            @ Data.Text.Internal.Text
                                            @ m
                                            $dErrorComponent
                                            $dStream
  = Parser.$s$fAlternativeParsecT_$s$fApplicativeParsecT @ m
"SPEC/Parser $fApplicativeParsecT_$cp1Applicative @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                                          -> *)
                                                                                  ($dStream :: Text.Megaparsec.Prim.Stream
                                                                                                 Data.Text.Internal.Text)
                                                                                  ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                                         Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fApplicativeParsecT_$cp1Applicative @ Text.Megaparsec.Error.Dec
                                                            @ Data.Text.Internal.Text
                                                            @ m
                                                            $dErrorComponent
                                                            $dStream
  = Parser.$s$fAlternativeParsecT_$s$fApplicativeParsecT_$cp1Applicative
      @ m
"SPEC/Parser $fMonadParsecT @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                    -> *)
                                                            ($dStream :: Text.Megaparsec.Prim.Stream
                                                                           Data.Text.Internal.Text)
                                                            ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                   Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fMonadParsecT @ Text.Megaparsec.Error.Dec
                                      @ Data.Text.Internal.Text
                                      @ m
                                      $dErrorComponent
                                      $dStream
  = Parser.$s$fMonadParsecT @ m
"SPEC/Parser $fMonadParsecesParsecT @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                            -> *)
                                                                    ($dStream :: Text.Megaparsec.Prim.Stream
                                                                                   Data.Text.Internal.Text)
                                                                    ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                           Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fMonadParsecesParsecT @ Text.Megaparsec.Error.Dec
                                              @ Data.Text.Internal.Text
                                              @ m
                                              $dErrorComponent
                                              $dStream
  = Parser.$s$fMonadParsecesParsecT @ m
"SPEC/Parser $fMonadParsecesParsecT_$chidden @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                                     -> *)
                                                                             ($dStream :: Text.Megaparsec.Prim.Stream
                                                                                            Data.Text.Internal.Text)
                                                                             ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                                    Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fMonadParsecesParsecT_$chidden @ Text.Megaparsec.Error.Dec
                                                       @ Data.Text.Internal.Text
                                                       @ m
                                                       $dErrorComponent
                                                       $dStream
  = Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$chidden
      @ m
"SPEC/Parser $fMonadParsecesParsecT_$clabel @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                                    -> *)
                                                                            ($dStream :: Text.Megaparsec.Prim.Stream
                                                                                           Data.Text.Internal.Text)
                                                                            ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                                   Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fMonadParsecesParsecT_$clabel @ Text.Megaparsec.Error.Dec
                                                      @ Data.Text.Internal.Text
                                                      @ m
                                                      $dErrorComponent
                                                      $dStream
  = Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$clabel
      @ m
"SPEC/Parser $fMonadParsecesParsecT_$cp1MonadParsec @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                                            -> *)
                                                                                    ($dStream :: Text.Megaparsec.Prim.Stream
                                                                                                   Data.Text.Internal.Text)
                                                                                    ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                                           Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fMonadParsecesParsecT_$cp1MonadParsec @ Text.Megaparsec.Error.Dec
                                                              @ Data.Text.Internal.Text
                                                              @ m
                                                              $dErrorComponent
                                                              $dStream
  = Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$cp1MonadParsec
      @ m
"SPEC/Parser $fMonadParsecesParsecT_$cp2MonadParsec @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                                            -> *)
                                                                                    ($dStream :: Text.Megaparsec.Prim.Stream
                                                                                                   Data.Text.Internal.Text)
                                                                                    ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                                           Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fMonadParsecesParsecT_$cp2MonadParsec @ Text.Megaparsec.Error.Dec
                                                              @ Data.Text.Internal.Text
                                                              @ m
                                                              $dErrorComponent
                                                              $dStream
  = Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$cp2MonadParsec
      @ m
"SPEC/Parser $fMonadParsecesParsecT_$ctoken @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                                    -> *)
                                                                            ($dStream :: Text.Megaparsec.Prim.Stream
                                                                                           Data.Text.Internal.Text)
                                                                            ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                                   Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fMonadParsecesParsecT_$ctoken @ Text.Megaparsec.Error.Dec
                                                      @ Data.Text.Internal.Text
                                                      @ m
                                                      $dErrorComponent
                                                      $dStream
  = Parser.$s$fMonadParsecesParsecT_$s$fMonadParsecesParsecT_$ctoken
      @ m
"SPEC/Parser $fMonadPlusParsecT @ Dec @ Text _" [ALWAYS] forall @ (m :: *
                                                                        -> *)
                                                                ($dStream :: Text.Megaparsec.Prim.Stream
                                                                               Data.Text.Internal.Text)
                                                                ($dErrorComponent :: Text.Megaparsec.Error.ErrorComponent
                                                                                       Text.Megaparsec.Error.Dec)
  Text.Megaparsec.Prim.$fMonadPlusParsecT @ Text.Megaparsec.Error.Dec
                                          @ Data.Text.Internal.Text
                                          @ m
                                          $dErrorComponent
                                          $dStream
  = Parser.$s$fMonadParsecesParsecT_$s$fMonadPlusParsecT @ m
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

