:quit 
if true{H} then false{MB} else true{MA}
if true{H} then false{MB} else true{MB}
:quit 
f (g false{H})
let g {L} x = x
let f {L} x {L} = x
:quit 
f (g false{H})
let g {L} x = x
let f {L} x {L} = x
f (g false{H})
f false{H}
let g {L} x = x
let f {L} x {L} = x
let f {L} x {L} = x {L}
:quit 
f (false{H})
:t g
let g {L} x = x
:t f
let f {L} x {L} = x
:quit 
true \/ false
:quit 
if true then false else true
f true
:t f
let f x = if x then true else false
:quit 
:t f
f true
let f x = if x then true else false
:quit 
f true
let f x = if x then true else false
f true
:t f
let f x = if x then true else false
f false
let f x = if x then true else false
f false
let f x = if x then true else false
:quit 
f false
let f x = if x then true else false
:quit 
f false
let f x = if x then true else false
:quit 
f true
:t f
let f x = if x then true else false
