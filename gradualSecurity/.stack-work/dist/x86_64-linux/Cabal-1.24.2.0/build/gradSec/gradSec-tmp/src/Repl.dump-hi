
==================== FINAL INTERFACE ====================
2017-03-27 15:16:06.993166498 UTC

interface main@main:Repl [orphan module] 8002
  interface hash: 443ed79cea82345eed062fc49d8e9d5c
  ABI hash: ba1cb9c96b99acde84f6364421cd8b47
  export-list hash: 2aee03cf2b6b6030a53c2221974d9a48
  orphan hash: a2cb52ffefd08ee194f1f2b4da7b28b4
  flag hash: 919712b61ca3ebdfa1350799b1d512ca
  sig of: Nothing
  used TH splices: False
  where
exports:
  Repl.browse
  Repl.cmd
  Repl.comp
  Repl.completer
  Repl.defaultMatcher
  Repl.help
  Repl.ini
  Repl.load
  Repl.options
  Repl.quit
  Repl.repl
  Repl.typeof
module dependencies: DynamicCheck Gamma Lattice Parser PrettyPrint
                     Processor StaticCheck Syntax
package dependencies: QuickCheck-2.9.2@QuickCheck-2.9.2-Jyj4gc4JxkEIgGFLAsGhs9
                      StateVar-1.1.0.4@StateVar-1.1.0.4-5dJbnTVECtEAhfJXPZKdbO
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-18Iua6Y0oQZ5teqNh3j59Q
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-Gr2V5sUh0vxILqRALkIOq0
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      base-orphans-0.5.4@base-orphans-0.5.4-ABoxiBf7nXc7Qqh66CgYc9
                      bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      comonad-5@comonad-5-3taBO7oiJOm7HwkDYjek6x
                      containers-0.5.7.1@containers-0.5.7.1
                      contravariant-1.4@contravariant-1.4-LOqCz9UiRqn89oyERzBA9D
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      distributive-0.5.2@distributive-0.5.2-DzhYIvhMV8O6K3jnVc2kgn
                      exceptions-0.8.3@exceptions-0.8.3-Ggtjm8GpjAqJV0BBy1Ma2L
                      filepath-1.4.1.1@filepath-1.4.1.1
                      ghc-boot-th-8.0.2@ghc-boot-th-8.0.2 ghc-prim-0.5.0.0
                      hashable-1.2.5.0@hashable-1.2.5.0-D487ltJkakbBMC5JTPGIXQ
                      haskeline-0.7.3.1@haskeline-0.7.3.1-19q6LHqZ5xHeU9qD4pnHO
                      integer-gmp-1.0.0.1
                      integer-logarithms-1.0.1@integer-logarithms-1.0.1-IEHCuEd5sG4JjSjlx7m5JF
                      megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M
                      mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      pretty-1.1.3.3@pretty-1.1.3.3
                      primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH
                      profunctors-5.2@profunctors-5.2-LIxTI75q4uF48YzuBFpJUP
                      random-1.1@random-1.1-9tceXaeYIMZ4JrKq20Egog
                      repline-0.1.6.0@repline-0.1.6.0-24ElRfM5DSl60yAuSTVxnN
                      scientific-0.3.4.10@scientific-0.3.4.10-23m8gsMho2XA7iQioaf2OE
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      tagged-0.8.5@tagged-0.8.5-DqTYAPqU3ao5zvndQftjsL
                      template-haskell-2.11.1.0 terminfo-0.4.0.2@terminfo-0.4.0.2
                      text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li
                      tf-random-0.5@tf-random-0.5-BGjMgO8m67W8CHiEl15kZ7
                      time-1.6.0.1@time-1.6.0.1 transformers-0.5.2.0@transformers-0.5.2.0
                      transformers-compat-0.5.1.4@transformers-compat-0.5.1.4-2tm9ddmq5Qk3kF2emBuYBK
                      unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E
                      unix-2.7.2.1@unix-2.7.2.1
                      vector-0.11.0.0@vector-0.11.0.0-27QpYeEDQwsDlrhnt04T6e
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.5.0@hashable-1.2.5.0-D487ltJkakbBMC5JTPGIXQ:Data.Hashable.Generic
         main@main:Syntax
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text
         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Lazy
         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Show
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
         vector-0.11.0.0@vector-0.11.0.0-27QpYeEDQwsDlrhnt04T6e:Data.Vector.Fusion.Bundle
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Compose base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Biff
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Clown
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Joker
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Product
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Sum
                         bifunctors-5.4.1@bifunctors-5.4.1-G9sSLclb5k26O3Lio1becS:Data.Bifunctor.Tannen
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         ghc-boot-th-8.0.2@ghc-boot-th-8.0.2:GHC.LanguageExtensions.Type
                         main@main:Lattice main@main:Syntax
                         megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Error
                         megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Pos
                         megaparsec-5.2.0@megaparsec-5.2.0-5nYAxih7wLDlUbYD61o5M:Text.Megaparsec.Prim
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.3@pretty-1.1.3.3:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primitive-0.6.1.0-6AbSTw9JXz141LE5p6LGH:Control.Monad.Primitive
                         tagged-0.8.5@tagged-0.8.5-DqTYAPqU3ao5zvndQftjsL:Data.Tagged
                         template-haskell-2.11.1.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text
                         text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.Lazy
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Bind
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Embed
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Name
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Rebind
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Rec
                         unbound-generics-0.3.1@unbound-generics-0.3.1-BnZfdHaJ5Vovbu7cNDG2E:Unbound.Generics.LocallyNameless.Shift
                         vector-0.11.0.0@vector-0.11.0.0-27QpYeEDQwsDlrhnt04T6e:Data.Vector
import  -/  ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-Gr2V5sUh0vxILqRALkIOq0:Text.PrettyPrint.ANSI.Leijen 0b0029118a73d460584eaa06296bf541
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Exit 068ba078eb20417d7af66db8b8ab4db1
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base a29df8c78ba14cbcd4d90f97bd8d22e9
import  -/  directory-1.3.0.0@directory-1.3.0.0:System.Directory 0639d8cfeb46b10c8980240d51e436f3
import  -/  exceptions-0.8.3@exceptions-0.8.3-Ggtjm8GpjAqJV0BBy1Ma2L:Control.Monad.Catch 74b289809c367e6693c609c4b43e5e82
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  haskeline-0.7.3.1@haskeline-0.7.3.1-19q6LHqZ5xHeU9qD4pnHO:System.Console.Haskeline.Completion a4b111cf1458d5d0318cdf90f3fe4f17
import  -/  Gamma 4aeb18cf8fa74d68a048d0751b385c8b
  exports: 3977cd7b93c438541904e8bef23fa46c
  initCtx 4c642af37da6f3b4fa70a1ebcd3ec56c
import  -/  PrettyPrint 0d75d825d79f099e47368c96de95ffb9
  exports: ccf1c4736ffb4ad151039754c544a614
  display 991a94a356a59269559095f141ef7ca3
  ppstatic b645d0e6dabcd06acc94d644ed09af57
import  -/  Processor 2a81a3085ccca5e81ffbd484249eb339
  exports: ec68a343477e92aa07a7683c21f29411
  Repl dceb552ecc0f61021e74f68e271d9524
  processDynamic 9c811a34756c5d1926c558ef71a2bbc8
  processStatic f3b730545546ce888f4d340fdbcce68d
import  -/  Syntax 6c120300cbc8be0c354432ee47bcf2aa
  exports: 095bc84ec11cd23a65bba080dc14ddf8
  Ctx 043451a54ebe0fa8e1aabda3008751fa
  Gamma b049cc93227a1c99c7e5e3557f91a45a
  gamma 8ae791ea92a1337073c6a69aa8e4787c
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Class 6d31234b0a911b56412061943d18b89e
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Strict eff0af50b9ed40c32939885d02cca72b
import  -/  repline-0.1.6.0@repline-0.1.6.0-24ElRfM5DSl60yAuSTVxnN:System.Console.Repline 36079a688602236b8b0cce2e884339a9
import  -/  text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text 9ee336888c840d0d73391a6640977abb
import  -/  text-1.2.2.1@text-1.2.2.1-FeA6fTH3E2n883cNXIS2Li:Data.Text.IO d1b06f028866cf5215915c2f12e4529b
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.State.Strict 978f397cc30fa26d55cf117e3751a6ed
21a6d6535a1342292de3efe6a76883b5
  $fMonadThrowHaskelineT ::
    GHC.Base.Monad m =>
    Control.Monad.Catch.MonadThrow
      (System.Console.Repline.HaskelineT m)
  DFunId
  {- Arity: 1,
     Strictness: <L,U(U(U(C(U),A),C(U),C(C1(U)),A,A),C(C1(U)),A,A,C(U))>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ (m :: * -> *) ($dMonad :: GHC.Base.Monad m).
                  @ (System.Console.Repline.HaskelineT m)
                  (System.Console.Repline.$fMonadHaskelineT @ m $dMonad)
                  (Repl.$fMonadThrowHaskelineT_$cthrowM @ m $dMonad) -}
2a350489aa82c0182b7284aa034a54d2
  $fMonadThrowHaskelineT1 ::
    e
    -> System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO) a
  {- Strictness: x -}
a788b88f28b892a840f9cac2d53107b5
  $fMonadThrowHaskelineT2 ::
    GHC.Base.Functor
      (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
  {- Unfolding: (\ @ s ->
                 Control.Monad.Trans.State.Strict.$fFunctorStateT
                   @ GHC.Types.IO
                   @ s
                   GHC.Base.$fFunctorIO) -}
01c449aa8c8e1825558565f6ffa52201
  $fMonadThrowHaskelineT3 ::
    e -> System.Console.Repline.HaskelineT m a
  {- Strictness: x -}
b36bc209179b786e4a3e17280a395dd9
  $fMonadThrowHaskelineT_$cthrowM ::
    GHC.Base.Monad m =>
    forall e a.
    GHC.Exception.Exception e =>
    e -> System.Console.Repline.HaskelineT m a
  {- Arity: 2, Strictness: <B,A><B,A>x,
     Unfolding: InlineRule (2, True, True)
                (\ @ (m :: * -> *)
                   ($dMonad :: GHC.Base.Monad m)
                   @ e
                   @ a
                   ($dException :: GHC.Exception.Exception e) ->
                 Repl.$fMonadThrowHaskelineT3 @ m @ a @ e) -}
8e326bc0b7973fcd44e4f084dae0df2d
  $fMonadThrowHaskelineT_$dApplicative ::
    GHC.Base.Applicative
      (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Repl.$fMonadThrowHaskelineT_$s$fApplicativeStateT @ Syntax.Ctx) -}
19a7eb9a1b0d00116eed18400abb82ec
  $fMonadThrowHaskelineT_$dFunctor :: GHC.Base.Functor GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fFunctorIO -}
7b67ad35125ef95b0bfdb0548419d3c9
  $fMonadThrowHaskelineT_$dFunctor1 ::
    GHC.Base.Functor
      (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
  {- Unfolding: InlineRule (0, True, True)
                (Repl.$fMonadThrowHaskelineT2 @ Syntax.Ctx) -}
b44db455c1e8b1805c5cd5b6d1c7f3fc
  $fMonadThrowHaskelineT_$dMonad ::
    GHC.Base.Monad
      (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Repl.$fMonadThrowHaskelineT_$s$fMonadStateT @ Syntax.Ctx) -}
1352e33d2467dc034a0c939aff9df062
  $fMonadThrowHaskelineT_$dMonad1 :: GHC.Base.Monad GHC.Types.IO
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True) GHC.Base.$fMonadIO -}
3917170e37171bea892ec41320a8912c
  $fMonadThrowHaskelineT_$s$cthrowM ::
    GHC.Exception.Exception e =>
    e
    -> System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO) a
  {- Arity: 1, Strictness: <B,A>x,
     Unfolding: InlineRule (1, True, True)
                (\ @ e @ a ($dException :: GHC.Exception.Exception e) ->
                 Repl.$fMonadThrowHaskelineT1 @ a @ e) -}
13708e387a3a52a2e1a2a1784625f5ca
  $fMonadThrowHaskelineT_$s$fApplicativeHaskelineT ::
    GHC.Base.Applicative
      (System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (System.Console.Repline.HaskelineT
                       (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                  Repl.$fMonadThrowHaskelineT_$s$fApplicativeHaskelineT_$cp1Applicative
                  (System.Console.Repline.$fApplicativeHaskelineT_$cpure
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dApplicative)
                  (System.Console.Repline.$fApplicativeHaskelineT_$c<*>
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dApplicative)
                  (System.Console.Repline.$fApplicativeHaskelineT_$c*>
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dApplicative)
                  (System.Console.Repline.$fApplicativeHaskelineT_$c<*
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dApplicative) -}
63ac5227ddd429bd46d3874341d53ef6
  $fMonadThrowHaskelineT_$s$fApplicativeHaskelineT_$cp1Applicative ::
    GHC.Base.Functor
      (System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Repl.$fMonadThrowHaskelineT_$s$fFunctorHaskelineT -}
6f381444deb412377e5713eabcca6e99
  $fMonadThrowHaskelineT_$s$fApplicativeStateT ::
    GHC.Base.Applicative
      (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
                  (Repl.$fMonadThrowHaskelineT2 @ s)
                  (Repl.$fMonadThrowHaskelineT_$s$fApplicativeStateT_$cpure @ s)
                  (Repl.$fMonadThrowHaskelineT_$s$fApplicativeStateT_$c<*> @ s)
                  (Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c*>
                     @ GHC.Types.IO
                     @ s
                     Repl.$fMonadThrowHaskelineT_$dFunctor
                     Repl.$fMonadThrowHaskelineT_$dMonad1)
                  (Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c<*
                     @ GHC.Types.IO
                     @ s
                     Repl.$fMonadThrowHaskelineT_$dFunctor
                     Repl.$fMonadThrowHaskelineT_$dMonad1) -}
fd0cc3a90b57e7c7931265dee6e2a008
  $fMonadThrowHaskelineT_$s$fApplicativeStateT_$c<*> ::
    Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO (a -> b)
    -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a
    -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SS))),1*C1(C1(U(U,1*U(1*C1(U),U))))><L,1*C1(C1(U(U,1*U(U,U))))><L,U><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (ds :: Control.Monad.Trans.State.Strict.StateT
                            s GHC.Types.IO (a -> b))
                   (ds1 :: Control.Monad.Trans.State.Strict.StateT
                             s GHC.Types.IO a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> GHC.Types.IO (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b)
                   (\ (tpl :: s -> GHC.Types.IO (b, s)) -> tpl)
                     `cast`
                   (<s -> GHC.Types.IO (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <GHC.Types.IO>_R <b>_N))
                   (\ (s1 :: s) ->
                    GHC.Base.bindIO
                      @ (a -> b, s)
                      @ (b, s)
                      (ds
                         `cast`
                       (Control.Monad.Trans.State.Strict.N:StateT[0]
                            <s>_N <GHC.Types.IO>_R <a -> b>_N)
                         s1)
                      (\ (ds2 :: (a -> b, s)) ->
                       case ds2 of wild { (,) f s' ->
                       GHC.Base.bindIO
                         @ (a, s)
                         @ (b, s)
                         (ds1
                            `cast`
                          (Control.Monad.Trans.State.Strict.N:StateT[0]
                               <s>_N <GHC.Types.IO>_R <a>_N)
                            s')
                         (\ (ds3 :: (a, s))
                            (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          case ds3 of wild1 { (,) x s'' ->
                          (GHC.Base.returnIO @ (b, s) (f x, s''))
                            `cast`
                          (GHC.Types.N:IO[0] <(b, s)>_R)
                            eta })
                           `cast`
                         (<(a, s)>_R ->_R Sym (GHC.Types.N:IO[0] <(b, s)>_R)) }))) -}
19864498ef7c0deee7453c6951c3554b
  $fMonadThrowHaskelineT_$s$fApplicativeStateT_$cpure ::
    a -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ s @ a (a1 :: a) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> GHC.Types.IO (a, s))
                   @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a)
                   (\ (tpl :: s -> GHC.Types.IO (a, s)) -> tpl)
                     `cast`
                   (<s -> GHC.Types.IO (a, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <GHC.Types.IO>_R <a>_N))
                   (\ (s1 :: s)
                      (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    (GHC.Base.returnIO @ (a, s) (a1, s1))
                      `cast`
                    (GHC.Types.N:IO[0] <(a, s)>_R)
                      eta)
                     `cast`
                   (<s>_R ->_R Sym (GHC.Types.N:IO[0] <(a, s)>_R))) -}
2898c2761bcaaf181ff7dda619defd59
  $fMonadThrowHaskelineT_$s$fFunctorHaskelineT ::
    GHC.Base.Functor
      (System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (System.Console.Repline.HaskelineT
                       (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                  (System.Console.Repline.$fFunctorHaskelineT_$cfmap
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dFunctor1)
                  (System.Console.Repline.$fFunctorHaskelineT_$c<$
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dFunctor1) -}
afd758a55c70a6c665401e3500574ff3
  $fMonadThrowHaskelineT_$s$fMonadHaskelineT ::
    GHC.Base.Monad
      (System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (System.Console.Repline.HaskelineT
                       (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                  Repl.$fMonadThrowHaskelineT_$s$fMonadHaskelineT_$cp1Monad
                  (System.Console.Repline.$fMonadHaskelineT_$c>>=
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dMonad)
                  (System.Console.Repline.$fMonadHaskelineT_$c>>
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dMonad)
                  (System.Console.Repline.$fMonadHaskelineT_$creturn
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dMonad)
                  (System.Console.Repline.$fMonadHaskelineT_$cfail
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$fMonadThrowHaskelineT_$dMonad) -}
e19bcb1400e99e629e43bb269d7a39e9
  $fMonadThrowHaskelineT_$s$fMonadHaskelineT_$cp1Monad ::
    GHC.Base.Applicative
      (System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Repl.$fMonadThrowHaskelineT_$s$fApplicativeHaskelineT -}
dab9761d92635282ef4aa215c02e8697
  $fMonadThrowHaskelineT_$s$fMonadStateT ::
    GHC.Base.Monad
      (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
                  (Repl.$fMonadThrowHaskelineT_$s$fMonadStateT_$cp1Monad @ s)
                  (Repl.$fMonadThrowHaskelineT_$s$fMonadStateT_$c>>= @ s)
                  (Repl.$fMonadThrowHaskelineT_$s$fMonadStateT_$c>> @ s)
                  (Control.Monad.Trans.State.Strict.$fMonadStateT_$creturn
                     @ GHC.Types.IO
                     @ s
                     Repl.$fMonadThrowHaskelineT_$dMonad1)
                  (Repl.$fMonadThrowHaskelineT_$s$fMonadStateT_$cfail @ s) -}
7d0df281c18ed67a68d4ccaae154133c
  $fMonadThrowHaskelineT_$s$fMonadStateT_$c>> ::
    Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a
    -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b
    -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SS))),1*C1(C1(U(U,1*U(A,U))))><L,1*C1(C1(U(U,U)))><L,U><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a)
                   (k :: Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> GHC.Types.IO (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b)
                   (\ (tpl :: s -> GHC.Types.IO (b, s)) -> tpl)
                     `cast`
                   (<s -> GHC.Types.IO (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <GHC.Types.IO>_R <b>_N))
                   (\ (s1 :: s) ->
                    GHC.Base.bindIO
                      @ (a, s)
                      @ (b, s)
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ GHC.Types.IO
                         @ a
                         m1
                         s1)
                      (\ (ds :: (a, s)) ->
                       case ds of wild { (,) a1 s' ->
                       Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ GHC.Types.IO
                         @ b
                         k
                         s' }))) -}
adefe39b575c08138a2c1117bdfb5071
  $fMonadThrowHaskelineT_$s$fMonadStateT_$c>>= ::
    Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a
    -> (a -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b)
    -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b
  {- Arity: 4, HasNoCafRefs,
     Strictness: <C(C(S(SS))),1*C1(C1(U(U,1*U(U,U))))><L,1*C1(C1(C1(U(U,U))))><L,U><S,U>,
     Inline: INLINE (sat-args=2),
     Unfolding: InlineRule (2, False, False)
                (\ @ s
                   @ a
                   @ b
                   (m1 :: Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a)
                   (k :: a
                         -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> GHC.Types.IO (b, s))
                   @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO b)
                   (\ (tpl :: s -> GHC.Types.IO (b, s)) -> tpl)
                     `cast`
                   (<s -> GHC.Types.IO (b, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <GHC.Types.IO>_R <b>_N))
                   (\ (s1 :: s) ->
                    GHC.Base.bindIO
                      @ (a, s)
                      @ (b, s)
                      (Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ GHC.Types.IO
                         @ a
                         m1
                         s1)
                      (\ (ds :: (a, s)) ->
                       case ds of wild { (,) a1 s' ->
                       Control.Monad.Trans.State.Strict.runStateT
                         @ s
                         @ GHC.Types.IO
                         @ b
                         (k a1)
                         s' }))) -}
9111adf895ed67baf1b0f86fd462b9ca
  $fMonadThrowHaskelineT_$s$fMonadStateT_$cfail ::
    GHC.Base.String
    -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a
  {- Arity: 3, Strictness: <B,U><B,A><B,U>x,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ s @ a (str :: GHC.Base.String) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> GHC.Types.IO (a, s))
                   @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a)
                   (\ (tpl :: s -> GHC.Types.IO (a, s)) -> tpl)
                     `cast`
                   (<s -> GHC.Types.IO (a, s)>_R
                    ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <s>_N <GHC.Types.IO>_R <a>_N))
                   (\ (ds :: s) -> GHC.Base.$fMonadIO_$cfail @ (a, s) str)) -}
b7865133f34e6c7e12b5c7d237c328f4
  $fMonadThrowHaskelineT_$s$fMonadStateT_$cp1Monad ::
    GHC.Base.Applicative
      (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Repl.$fMonadThrowHaskelineT_$s$fApplicativeStateT -}
9e181a9bf18c1404cf96e0acc71aa80e
  $fMonadThrowHaskelineT_$s$fMonadThrowHaskelineT ::
    Control.Monad.Catch.MonadThrow
      (System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (System.Console.Repline.HaskelineT
                       (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                  Repl.$fMonadThrowHaskelineT_$s$fMonadHaskelineT
                  Repl.$fMonadThrowHaskelineT_$s$cthrowM -}
1a909a0825c1fbf814d5026b2dc1543d
  $s$fMonadExceptionStateT ::
    System.Console.Haskeline.MonadException.MonadException
      (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
                  (Repl.$s$fMonadExceptionStateT_$s$fMonadExceptionStateT_$cp1MonadException
                     @ s)
                  (System.Console.Haskeline.MonadException.$fMonadExceptionStateT_$ccontrolIO
                     @ GHC.Types.IO
                     @ s
                     System.Console.Haskeline.MonadException.$fMonadExceptionIO) -}
76d927c49985415fbfe5ea3bced6c195
  $s$fMonadExceptionStateT_$s$fMonadExceptionStateT_$cp1MonadException ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Repl.$s$fMonadExceptionStateT_$s$fMonadIOStateT -}
486d6e2f91492e7f2871eba8c74a25d8
  $s$fMonadExceptionStateT_$s$fMonadIOStateT ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
                  (Repl.$s$fMonadExceptionStateT_$s$fMonadIOStateT_$cp1MonadIO @ s)
                  (\ @ a (eta :: GHC.Types.IO a) ->
                   let {
                     m1 :: GHC.Types.IO a = GHC.Base.id @ (GHC.Types.IO a) eta
                   } in
                   GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (s -> GHC.Types.IO (a, s))
                     @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO a)
                     (\ (tpl :: s -> GHC.Types.IO (a, s)) -> tpl)
                       `cast`
                     (<s -> GHC.Types.IO (a, s)>_R
                      ->_R Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                    <s>_N <GHC.Types.IO>_R <a>_N))
                     (\ (s1 :: s)
                        (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                      (GHC.Base.bindIO
                         @ a
                         @ (a, s)
                         m1
                         (\ (a1 :: a)
                            (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                          (GHC.Base.returnIO @ (a, s) (a1, s1))
                            `cast`
                          (GHC.Types.N:IO[0] <(a, s)>_R)
                            eta2)
                           `cast`
                         (<a>_R ->_R Sym (GHC.Types.N:IO[0] <(a, s)>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <(a, s)>_R)
                        eta1)
                       `cast`
                     (<s>_R ->_R Sym (GHC.Types.N:IO[0] <(a, s)>_R))) -}
2d4405d0958c60d842dcf138be6abf49
  $s$fMonadExceptionStateT_$s$fMonadIOStateT_$cp1MonadIO ::
    GHC.Base.Monad
      (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Repl.$fMonadThrowHaskelineT_$s$fMonadStateT -}
8bb31bf5b07e03386dd74988863fadf8
  $s$fMonadIOHaskelineT ::
    Control.Monad.IO.Class.MonadIO
      (System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ (System.Console.Repline.HaskelineT
                       (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                  Repl.$s$fMonadIOHaskelineT_$s$fMonadStatesHaskelineT_$cp1MonadState
                  (System.Console.Repline.$fMonadIOHaskelineT_$cliftIO
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$s$fMonadIOHaskelineT1) -}
0a240ec5f1f589a181d4de4166d9373a
  $s$fMonadIOHaskelineT1 ::
    Control.Monad.IO.Class.MonadIO
      (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Repl.$s$fMonadExceptionStateT_$s$fMonadIOStateT @ Syntax.Ctx) -}
9ec7bb653ead12d4cc9685abc9675494
  $s$fMonadIOHaskelineT_$s$fMonadStatesHaskelineT_$cp1MonadState ::
    GHC.Base.Monad
      (System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                Repl.$fMonadThrowHaskelineT_$s$fMonadHaskelineT -}
053dd1c48cc67c4bdeeff915e4f5df44
  $s$fMonadStatesHaskelineT ::
    Control.Monad.State.Class.MonadState
      Syntax.Ctx
      (System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Syntax.Ctx
                  @ (System.Console.Repline.HaskelineT
                       (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                  Repl.$s$fMonadIOHaskelineT_$s$fMonadStatesHaskelineT_$cp1MonadState
                  (System.Console.Repline.$fMonadStatesHaskelineT_$cget
                     @ Syntax.Ctx
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$s$fMonadStatesHaskelineT1)
                  Repl.$s$fMonadStatesHaskelineT_$s$fMonadStatesHaskelineT_$cput
                  (System.Console.Repline.$fMonadStatesHaskelineT_$cstate
                     @ Syntax.Ctx
                     @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                     Repl.$s$fMonadStatesHaskelineT1) -}
ce240241c649f6fae33fbd236ddfffda
  $s$fMonadStatesHaskelineT1 ::
    Control.Monad.State.Class.MonadState
      Syntax.Ctx
      (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
  {- Strictness: m,
     Unfolding: InlineRule (0, True, True)
                (Repl.$s$fMonadStatesHaskelineT_$s$fMonadStatesStateT
                   @ Syntax.Ctx) -}
62a0edc324d5e84ceff4ff5581bd5b71
  $s$fMonadStatesHaskelineT_$s$fMonadStatesHaskelineT_$cput ::
    Syntax.Ctx
    -> System.Console.Repline.HaskelineT
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
         ()
  {- Arity: 8, HasNoCafRefs,
     Strictness: <L,U><L,A><L,A><L,A><L,A><L,A><L,A><S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (eta :: Syntax.Ctx) ->
                 let {
                   eta1 :: Control.Monad.Trans.State.Strict.StateT
                             Syntax.Ctx GHC.Types.IO ()
                   = GHC.Base.$
                       @ 'GHC.Types.PtrRepLifted
                       @ (Syntax.Ctx -> ((), Syntax.Ctx))
                       @ (Control.Monad.Trans.State.Strict.StateT
                            Syntax.Ctx GHC.Types.IO ())
                       (Control.Monad.Trans.State.Strict.state
                          @ GHC.Types.IO
                          @ Syntax.Ctx
                          @ ()
                          GHC.Base.$fMonadIO)
                       (\ (ds :: Syntax.Ctx) -> (GHC.Tuple.(), eta))
                 } in
                 (\ (eta2 :: System.Console.Haskeline.Term.RunTerm)
                    (eta3 :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                    (eta4 :: GHC.IORef.IORef
                               System.Console.Haskeline.Command.KillRing.KillRing)
                    (eta5 :: System.Console.Haskeline.Prefs.Prefs)
                    (eta6 :: System.Console.Haskeline.InputT.Settings
                               (Control.Monad.Trans.State.Strict.StateT
                                  Syntax.Ctx GHC.Types.IO)) ->
                  eta1)
                   `cast`
                 (Trans
                      (<System.Console.Haskeline.Term.RunTerm>_R
                       ->_R Trans
                                (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                 ->_R Trans
                                          (<GHC.IORef.IORef
                                              System.Console.Haskeline.Command.KillRing.KillRing>_R
                                           ->_R Trans
                                                    (<System.Console.Haskeline.Prefs.Prefs>_R
                                                     ->_R Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                   <*>_N
                                                                   <System.Console.Haskeline.InputT.Settings
                                                                      (Control.Monad.Trans.State.Strict.StateT
                                                                         Syntax.Ctx GHC.Types.IO)>_R
                                                                   <Control.Monad.Trans.State.Strict.StateT
                                                                      Syntax.Ctx GHC.Types.IO>_R
                                                                   <()>_N))
                                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                              <*>_N
                                                              <System.Console.Haskeline.Prefs.Prefs>_R
                                                              <Control.Monad.Trans.Reader.ReaderT
                                                                 (System.Console.Haskeline.InputT.Settings
                                                                    (Control.Monad.Trans.State.Strict.StateT
                                                                       Syntax.Ctx GHC.Types.IO))
                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                    Syntax.Ctx GHC.Types.IO)>_R
                                                              <()>_N)))
                                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                    <*>_N
                                                    <GHC.IORef.IORef
                                                       System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                    <Control.Monad.Trans.Reader.ReaderT
                                                       System.Console.Haskeline.Prefs.Prefs
                                                       (Control.Monad.Trans.Reader.ReaderT
                                                          (System.Console.Haskeline.InputT.Settings
                                                             (Control.Monad.Trans.State.Strict.StateT
                                                                Syntax.Ctx GHC.Types.IO))
                                                          (Control.Monad.Trans.State.Strict.StateT
                                                             Syntax.Ctx GHC.Types.IO))>_R
                                                    <()>_N)))
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <GHC.IORef.IORef
                                             System.Console.Haskeline.History.History>_R
                                          <Control.Monad.Trans.Reader.ReaderT
                                             (GHC.IORef.IORef
                                                System.Console.Haskeline.Command.KillRing.KillRing)
                                             (Control.Monad.Trans.Reader.ReaderT
                                                System.Console.Haskeline.Prefs.Prefs
                                                (Control.Monad.Trans.Reader.ReaderT
                                                   (System.Console.Haskeline.InputT.Settings
                                                      (Control.Monad.Trans.State.Strict.StateT
                                                         Syntax.Ctx GHC.Types.IO))
                                                   (Control.Monad.Trans.State.Strict.StateT
                                                      Syntax.Ctx GHC.Types.IO)))>_R
                                          <()>_N)))
                      (Trans
                           (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <System.Console.Haskeline.Term.RunTerm>_R
                                     <Control.Monad.Trans.Reader.ReaderT
                                        (GHC.IORef.IORef System.Console.Haskeline.History.History)
                                        (Control.Monad.Trans.Reader.ReaderT
                                           (GHC.IORef.IORef
                                              System.Console.Haskeline.Command.KillRing.KillRing)
                                           (Control.Monad.Trans.Reader.ReaderT
                                              System.Console.Haskeline.Prefs.Prefs
                                              (Control.Monad.Trans.Reader.ReaderT
                                                 (System.Console.Haskeline.InputT.Settings
                                                    (Control.Monad.Trans.State.Strict.StateT
                                                       Syntax.Ctx GHC.Types.IO))
                                                 (Control.Monad.Trans.State.Strict.StateT
                                                    Syntax.Ctx GHC.Types.IO))))>_R
                                     <()>_N))
                           (Trans
                                (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                          <Control.Monad.Trans.State.Strict.StateT
                                             Syntax.Ctx GHC.Types.IO>_R))
                                (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                 Syntax.Ctx
                                                                                 GHC.Types.IO>_N) <()>_N)))) -}
2d128e74b7e36927a0681a1f6725cfd6
  $s$fMonadStatesHaskelineT_$s$fMonadStatesStateT ::
    Control.Monad.State.Class.MonadState
      s (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ s.
                  @ s
                  @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO)
                  (Repl.$fMonadThrowHaskelineT_$s$fMonadStateT @ s)
                  (GHC.Base.$
                     @ 'GHC.Types.PtrRepLifted
                     @ (s -> (s, s))
                     @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO s)
                     (Control.Monad.Trans.State.Strict.state
                        @ GHC.Types.IO
                        @ s
                        @ s
                        GHC.Base.$fMonadIO)
                     (\ (s1 :: s) -> (s1, s1)))
                  (Repl.$s$fMonadStatesHaskelineT_$sput @ s)
                  (Control.Monad.State.Class.$fMonadStatesStateT_$cstate
                     @ GHC.Types.IO
                     @ s
                     GHC.Base.$fMonadIO) -}
49d72b1ee6aa298a4fc1e551139833cb
  $s$fMonadStatesHaskelineT_$sput ::
    s -> Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO ()
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,A><S,U>,
     Inline: INLINE (sat-args=1),
     Unfolding: InlineRule (1, False, False)
                (\ @ s (s1 :: s) ->
                 GHC.Base.$
                   @ 'GHC.Types.PtrRepLifted
                   @ (s -> ((), s))
                   @ (Control.Monad.Trans.State.Strict.StateT s GHC.Types.IO ())
                   (Control.Monad.Trans.State.Strict.state
                      @ GHC.Types.IO
                      @ s
                      @ ()
                      GHC.Base.$fMonadIO)
                   (\ (ds :: s) -> (GHC.Tuple.(), s1))) -}
9fa72a833ac5bf14970c433dd4db3f04
  $slookup1 ::
    GHC.Base.String
    -> Data.Map.Base.Map GHC.Base.String a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
b78e5ed46538f41b2eadaa7f50291827
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Repl.$trModule2 Repl.$trModule1) -}
b4b78c1e3ef088eac65931424fda2b28
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Repl"#) -}
e3338ba88618761857b0a36418cad00c
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
7f9c0cf547a13604f598caf3a0487887
  $wcomp ::
    Control.Monad.State.Class.MonadState Syntax.Ctx m =>
    GHC.Base.String -> m [[GHC.Types.Char]]
  {- Arity: 2,
     Strictness: <S(S(LLLC(S)L)LLL),1*U(1*U(A,A,A,1*C1(U),A),A,A,A)><L,U>,
     Inline: [0],
     Unfolding: (\ @ (m :: * -> *)
                   (w :: Control.Monad.State.Class.MonadState Syntax.Ctx m)
                   (w1 :: GHC.Base.String) ->
                 GHC.Base.return
                   @ m
                   (Control.Monad.State.Class.$p1MonadState @ Syntax.Ctx @ m w)
                   @ [[GHC.Types.Char]]
                   (let {
                      r :: [[GHC.Types.Char]]
                      = let {
                          r1 :: [[GHC.Types.Char]]
                          = let {
                              r2 :: [[GHC.Types.Char]]
                              = case Data.OldList.isPrefixOf
                                       @ GHC.Types.Char
                                       GHC.Classes.$fEqChar
                                       w1
                                       Repl.comp6 of wild {
                                  GHC.Types.False
                                  -> case Data.OldList.isPrefixOf
                                            @ GHC.Types.Char
                                            GHC.Classes.$fEqChar
                                            w1
                                            Repl.comp5 of wild1 {
                                       GHC.Types.False -> GHC.Types.[] @ [GHC.Types.Char]
                                       GHC.Types.True -> Repl.comp4 }
                                  GHC.Types.True
                                  -> GHC.Types.:
                                       @ [GHC.Types.Char]
                                       Repl.comp6
                                       (case Data.OldList.isPrefixOf
                                               @ GHC.Types.Char
                                               GHC.Classes.$fEqChar
                                               w1
                                               Repl.comp5 of wild1 {
                                          GHC.Types.False -> GHC.Types.[] @ [GHC.Types.Char]
                                          GHC.Types.True -> Repl.comp4 }) }
                            } in
                            case Data.OldList.isPrefixOf
                                   @ GHC.Types.Char
                                   GHC.Classes.$fEqChar
                                   w1
                                   Repl.comp3 of wild {
                              GHC.Types.False -> r2
                              GHC.Types.True -> GHC.Types.: @ [GHC.Types.Char] Repl.comp3 r2 }
                        } in
                        case Data.OldList.isPrefixOf
                               @ GHC.Types.Char
                               GHC.Classes.$fEqChar
                               w1
                               Repl.comp2 of wild {
                          GHC.Types.False -> r1
                          GHC.Types.True -> GHC.Types.: @ [GHC.Types.Char] Repl.comp2 r1 }
                    } in
                    case Data.OldList.isPrefixOf
                           @ GHC.Types.Char
                           GHC.Classes.$fEqChar
                           w1
                           Repl.comp1 of wild {
                      GHC.Types.False -> r
                      GHC.Types.True
                      -> GHC.Types.: @ [GHC.Types.Char] Repl.comp1 r })) -}
733c7560bab830354c630995d10b09d2
  $whelp ::
    [GHC.Base.String]
    -> Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 3, Strictness: <L,1*U><L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: [GHC.Base.String])
                   (w1 :: Syntax.Ctx)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.Types.:
                           @ GHC.Types.Char
                           GHC.Show.shows6
                           (GHC.Show.showLitString
                              (GHC.CString.unpackAppendCString#
                                 "Help: "#
                                 (GHC.Show.showList__
                                    @ [GHC.Types.Char]
                                    GHC.Show.shows_$cshowList1
                                    w
                                    (GHC.Types.[] @ GHC.Types.Char)))
                              Repl.help2))
                        GHC.Types.True
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (ipv1, w1) #) }) -}
8e9c84c19d54ebdaaf8987e0cc095967
  $wini ::
    Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 2, Strictness: <L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Syntax.Ctx)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Repl.ini2
                        GHC.Types.True
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (ipv1, w) #) }) -}
8286ce7f9010dcb45883c6aedb47e99f
  $wlvl ::
    Syntax.TermEnv
    -> Syntax.Gamma
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 3, Strictness: <L,U><S,U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Syntax.TermEnv)
                   (ww1 :: Syntax.Gamma)
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Repl.browse4
                        Repl.browse3 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))
                        ww1 `cast` (Syntax.N:Gamma[0])
                        w of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (ipv1, Syntax.Ctx ww ww1) #) }) -}
e1a7c1eafed650a11c417b2eceedf34c
  $wlvl1 ::
    Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 2, Strictness: <L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Syntax.Ctx)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Repl.load2
                        GHC.Types.True
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (ipv1, w) #) }) -}
3fe3b838640bb83f825c037433b4be41
  $wlvl2 ::
    Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 2, Strictness: <L,U><S,U>, Inline: [0],
     Unfolding: (\ (w :: Syntax.Ctx)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Repl.typeof3
                        GHC.Types.True
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 (# ipv, (ipv1, w) #) }) -}
a7d9c2d464419733a29e3cd797780bb5
  $wouter ::
    Data.Text.Array.MArray GHC.Prim.RealWorld
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><S,U><S,U>,
     Inline: [0] -}
b5fc104176b56a04fcb99d3d5a9c7765
  browse :: [GHC.Base.String] -> Processor.Repl ()
  {- Arity: 8, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Repl.browse1
                  `cast`
                (<[GHC.Base.String]>_R
                 ->_R Trans
                          (<System.Console.Haskeline.Term.RunTerm>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                     ->_R Trans
                                              (<GHC.IORef.IORef
                                                  System.Console.Haskeline.Command.KillRing.KillRing>_R
                                               ->_R Trans
                                                        (<System.Console.Haskeline.Prefs.Prefs>_R
                                                         ->_R Trans
                                                                  (<System.Console.Haskeline.InputT.Settings
                                                                      (Control.Monad.Trans.State.Strict.StateT
                                                                         Syntax.Ctx GHC.Types.IO)>_R
                                                                   ->_R Trans
                                                                            (<Syntax.Ctx>_R
                                                                             ->_R Sym (GHC.Types.N:IO[0]
                                                                                           <((),
                                                                                             Syntax.Ctx)>_R))
                                                                            (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                      <Syntax.Ctx>_N
                                                                                      <GHC.Types.IO>_R
                                                                                      <()>_N)))
                                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                            <*>_N
                                                                            <System.Console.Haskeline.InputT.Settings
                                                                               (Control.Monad.Trans.State.Strict.StateT
                                                                                  Syntax.Ctx
                                                                                  GHC.Types.IO)>_R
                                                                            <Control.Monad.Trans.State.Strict.StateT
                                                                               Syntax.Ctx
                                                                               GHC.Types.IO>_R
                                                                            <()>_N)))
                                                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                  <*>_N
                                                                  <System.Console.Haskeline.Prefs.Prefs>_R
                                                                  <Control.Monad.Trans.Reader.ReaderT
                                                                     (System.Console.Haskeline.InputT.Settings
                                                                        (Control.Monad.Trans.State.Strict.StateT
                                                                           Syntax.Ctx GHC.Types.IO))
                                                                     (Control.Monad.Trans.State.Strict.StateT
                                                                        Syntax.Ctx GHC.Types.IO)>_R
                                                                  <()>_N)))
                                              (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                        <*>_N
                                                        <GHC.IORef.IORef
                                                           System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                        <Control.Monad.Trans.Reader.ReaderT
                                                           System.Console.Haskeline.Prefs.Prefs
                                                           (Control.Monad.Trans.Reader.ReaderT
                                                              (System.Console.Haskeline.InputT.Settings
                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                    Syntax.Ctx GHC.Types.IO))
                                                              (Control.Monad.Trans.State.Strict.StateT
                                                                 Syntax.Ctx GHC.Types.IO))>_R
                                                        <()>_N)))
                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                              <*>_N
                                              <GHC.IORef.IORef
                                                 System.Console.Haskeline.History.History>_R
                                              <Control.Monad.Trans.Reader.ReaderT
                                                 (GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing)
                                                 (Control.Monad.Trans.Reader.ReaderT
                                                    System.Console.Haskeline.Prefs.Prefs
                                                    (Control.Monad.Trans.Reader.ReaderT
                                                       (System.Console.Haskeline.InputT.Settings
                                                          (Control.Monad.Trans.State.Strict.StateT
                                                             Syntax.Ctx GHC.Types.IO))
                                                       (Control.Monad.Trans.State.Strict.StateT
                                                          Syntax.Ctx GHC.Types.IO)))>_R
                                              <()>_N)))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                         <*>_N
                                         <System.Console.Haskeline.Term.RunTerm>_R
                                         <Control.Monad.Trans.Reader.ReaderT
                                            (GHC.IORef.IORef
                                               System.Console.Haskeline.History.History)
                                            (Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef
                                                  System.Console.Haskeline.Command.KillRing.KillRing)
                                               (Control.Monad.Trans.Reader.ReaderT
                                                  System.Console.Haskeline.Prefs.Prefs
                                                  (Control.Monad.Trans.Reader.ReaderT
                                                     (System.Console.Haskeline.InputT.Settings
                                                        (Control.Monad.Trans.State.Strict.StateT
                                                           Syntax.Ctx GHC.Types.IO))
                                                     (Control.Monad.Trans.State.Strict.StateT
                                                        Syntax.Ctx GHC.Types.IO))))>_R
                                         <()>_N))
                               (Trans
                                    (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                              <Control.Monad.Trans.State.Strict.StateT
                                                 Syntax.Ctx GHC.Types.IO>_R))
                                    (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                     Syntax.Ctx
                                                                                     GHC.Types.IO>_N) <()>_N))) -}
078c2f3e3fbbdec2a32ca00b08cd2f9d
  browse1 ::
    [GHC.Base.String]
    -> System.Console.Haskeline.Term.RunTerm
    -> GHC.IORef.IORef System.Console.Haskeline.History.History
    -> GHC.IORef.IORef
         System.Console.Haskeline.Command.KillRing.KillRing
    -> System.Console.Haskeline.Prefs.Prefs
    -> System.Console.Haskeline.InputT.Settings
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
    -> Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 8, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ (ds :: [GHC.Base.String])
                   (eta :: System.Console.Haskeline.Term.RunTerm)
                   (eta1 :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                   (eta2 :: GHC.IORef.IORef
                              System.Console.Haskeline.Command.KillRing.KillRing)
                   (eta3 :: System.Console.Haskeline.Prefs.Prefs)
                   (eta4 :: System.Console.Haskeline.InputT.Settings
                              (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                   (eta5 :: Syntax.Ctx)
                   (eta6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Repl.browse2 eta eta1 eta2 eta3 eta4 eta5 eta6) -}
68d5f17233a5c50e6c7f64bb2075cf20
  browse2 ::
    System.Console.Haskeline.Term.RunTerm
    -> GHC.IORef.IORef System.Console.Haskeline.History.History
    -> GHC.IORef.IORef
         System.Console.Haskeline.Command.KillRing.KillRing
    -> System.Console.Haskeline.Prefs.Prefs
    -> System.Console.Haskeline.InputT.Settings
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
    -> Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 7,
     Strictness: <L,A><L,A><L,A><L,A><L,A><S(LS),1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, False)
                (\ (w :: System.Console.Haskeline.Term.RunTerm)
                   (w1 :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                   (w2 :: GHC.IORef.IORef
                            System.Console.Haskeline.Command.KillRing.KillRing)
                   (w3 :: System.Console.Haskeline.Prefs.Prefs)
                   (w4 :: System.Console.Haskeline.InputT.Settings
                            (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                   (w5 :: Syntax.Ctx)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w5 of ww { Syntax.Ctx ww1 ww2 -> Repl.$wlvl ww1 ww2 w6 }) -}
df44028877605bb2c5d0233df95c0e6d
  browse3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, GHC.Tuple.() #)) -}
28a59610dd2639ec38d171e1ffff4745
  browse4 ::
    GHC.Types.IO ()
    -> Data.Map.Base.Map [GHC.Types.Char] Syntax.GType
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,1*C1(U(U,U))><S,1*U><S,U> -}
c9437dad14cc36887ce5165cae725e71
  cmd :: GHC.Base.String -> Processor.Repl ()
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ (source :: GHC.Base.String) ->
                 Processor.processDynamic
                   (case GHC.Magic.runRW#
                           @ 'GHC.Types.PtrRepLifted
                           @ Data.Text.Internal.Text
                           (\ (s1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                            case GHC.Prim.newByteArray#
                                   @ GHC.Prim.RealWorld
                                   8#
                                   s1 of ds1 { (#,#) ipv ipv1 ->
                            Repl.$wouter
                              (Data.Text.Array.MArray @ GHC.Prim.RealWorld ipv1)
                              Repl.cmd1
                              source
                              0#
                              ipv }) of ds1 { (#,#) ipv ipv1 ->
                    ipv1 })) -}
9da047ba5af071d10f38520f749ff99b
  cmd1 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4#) -}
ee5bb116cc2020645a0c7ee2bda6c81b
  comp ::
    (GHC.Base.Monad m,
     Control.Monad.State.Class.MonadState Syntax.Ctx m) =>
    System.Console.Repline.WordCompleter m
  {- Arity: 3,
     Strictness: <L,A><S(S(LLLC(S)L)LLL),1*U(1*U(A,A,A,1*C1(U),A),A,A,A)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, True)
                (\ @ (m :: * -> *)
                   (w :: GHC.Base.Monad m)
                   (w1 :: Control.Monad.State.Class.MonadState Syntax.Ctx m)
                   (w2 :: GHC.Base.String) ->
                 Repl.$wcomp @ m w1 w2) -}
f52526297f85ec58343f7d25a67a5826
  comp1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":load"#) -}
d32eb57317829c21c4a63a5dab2fcfbe
  comp2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":help"#) -}
8120134baf72501693f005ac4760609a
  comp3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":quit"#) -}
b058b33f776e95c5c850bf586531bd27
  comp4 :: [[GHC.Types.Char]]
  {- Unfolding: (GHC.Types.:
                   @ [GHC.Types.Char]
                   Repl.comp5
                   (GHC.Types.[] @ [GHC.Types.Char])) -}
80c8fc23e61f217ea21ee39a4314a189
  comp5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":typeof"#) -}
7df27948323ed068b5542a26d30cffe2
  comp6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ":browse"#) -}
9267d5a4a7f057464e5ea8e070e9437a
  comp_$scomp ::
    System.Console.Repline.WordCompleter
      (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ (eta :: GHC.Base.String) ->
                 let {
                   eta1 :: [[GHC.Types.Char]]
                   = let {
                       r :: [[GHC.Types.Char]]
                       = let {
                           r1 :: [[GHC.Types.Char]]
                           = let {
                               r2 :: [[GHC.Types.Char]]
                               = case Data.OldList.isPrefixOf
                                        @ GHC.Types.Char
                                        GHC.Classes.$fEqChar
                                        eta
                                        Repl.comp6 of wild {
                                   GHC.Types.False
                                   -> case Data.OldList.isPrefixOf
                                             @ GHC.Types.Char
                                             GHC.Classes.$fEqChar
                                             eta
                                             Repl.comp5 of wild1 {
                                        GHC.Types.False -> GHC.Types.[] @ [GHC.Types.Char]
                                        GHC.Types.True -> Repl.comp4 }
                                   GHC.Types.True
                                   -> GHC.Types.:
                                        @ [GHC.Types.Char]
                                        Repl.comp6
                                        (case Data.OldList.isPrefixOf
                                                @ GHC.Types.Char
                                                GHC.Classes.$fEqChar
                                                eta
                                                Repl.comp5 of wild1 {
                                           GHC.Types.False -> GHC.Types.[] @ [GHC.Types.Char]
                                           GHC.Types.True -> Repl.comp4 }) }
                             } in
                             case Data.OldList.isPrefixOf
                                    @ GHC.Types.Char
                                    GHC.Classes.$fEqChar
                                    eta
                                    Repl.comp3 of wild {
                               GHC.Types.False -> r2
                               GHC.Types.True -> GHC.Types.: @ [GHC.Types.Char] Repl.comp3 r2 }
                         } in
                         case Data.OldList.isPrefixOf
                                @ GHC.Types.Char
                                GHC.Classes.$fEqChar
                                eta
                                Repl.comp2 of wild {
                           GHC.Types.False -> r1
                           GHC.Types.True -> GHC.Types.: @ [GHC.Types.Char] Repl.comp2 r1 }
                     } in
                     case Data.OldList.isPrefixOf
                            @ GHC.Types.Char
                            GHC.Classes.$fEqChar
                            eta
                            Repl.comp1 of wild {
                       GHC.Types.False -> r
                       GHC.Types.True -> GHC.Types.: @ [GHC.Types.Char] Repl.comp1 r }
                 } in
                 (\ (eta2 :: Syntax.Ctx)
                    (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                  (# s, (eta1, eta2) #))
                   `cast`
                 (Trans
                      (<Syntax.Ctx>_R
                       ->_R Sym (GHC.Types.N:IO[0] <([[GHC.Types.Char]], Syntax.Ctx)>_R))
                      (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                <Syntax.Ctx>_N <GHC.Types.IO>_R <[[GHC.Types.Char]]>_N)))) -}
bbfcf9b4f74155abff011d4171fa462b
  completer ::
    System.Console.Repline.CompleterStyle
      (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
  {- Strictness: m5,
     Unfolding: (System.Console.Repline.Prefix
                   @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                   Repl.completer3
                   Repl.completer_$sdefaultMatcher) -}
f4fba2ea280097b18e1f048c18b6e067
  completer1 ::
    ([GHC.Types.Char],
     System.Console.Haskeline.Completion.CompletionFunc
       (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
  {- Strictness: m, Unfolding: ((Repl.comp1, Repl.completer2)) -}
1e742451a20ca62a1fc83f24b8f3f2ae
  completer2 ::
    System.Console.Haskeline.Completion.CompletionFunc
      (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
  {- Arity: 1, Strictness: <S(SL),1*U(U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (w1 :: (GHC.Base.String, GHC.Base.String)) ->
                 case w1 of ww { (,) ww1 ww2 ->
                 System.Console.Haskeline.Completion.$wcompleteFilename
                   @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                   (Repl.$s$fMonadExceptionStateT_$s$fMonadIOStateT @ Syntax.Ctx)
                   ww1
                   ww2 }) -}
be696e3a605a591a27aa843c88744262
  completer3 ::
    System.Console.Haskeline.Completion.CompletionFunc
      (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
  {- Arity: 1, Strictness: <S,1*U(1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (w2 :: (GHC.Base.String, GHC.Base.String)) ->
                 case w2 of ww { (,) ww1 ww2 ->
                 System.Console.Repline.$wwordCompleter
                   @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                   (Repl.$fMonadThrowHaskelineT_$s$fMonadStateT @ Syntax.Ctx)
                   Repl.comp_$scomp
                   ww1 }) -}
08e8d68588c9d3726e659f7ee85ddc6b
  completer_$sdefaultMatcher ::
    [(GHC.Base.String,
      System.Console.Haskeline.Completion.CompletionFunc
        (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String,
                      System.Console.Haskeline.Completion.CompletionFunc
                        (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                   Repl.completer1
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         System.Console.Haskeline.Completion.CompletionFunc
                           (Control.Monad.Trans.State.Strict.StateT
                              Syntax.Ctx GHC.Types.IO)))) -}
5a4343cbc44148d19b74c36c5e7130de
  defaultMatcher ::
    Control.Monad.IO.Class.MonadIO m =>
    [(GHC.Base.String,
      System.Console.Haskeline.Completion.CompletionFunc m)]
  {- Arity: 1, Strictness: <L,U(U,C(U))>m2,
     Unfolding: InlineRule (1, True, False)
                (\ @ (m :: * -> *)
                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO m) ->
                 GHC.Types.:
                   @ (GHC.Base.String,
                      System.Console.Haskeline.Completion.CompletionFunc m)
                   (Repl.comp1,
                    System.Console.Haskeline.Completion.completeFilename @ m $dMonadIO)
                   (GHC.Types.[]
                      @ (GHC.Base.String,
                         System.Console.Haskeline.Completion.CompletionFunc m))) -}
bd6ab363d29ec2b70aeef74c866b1bfe
  help :: [GHC.Base.String] -> Processor.Repl ()
  {- Arity: 8,
     Strictness: <L,1*U><L,A><L,A><L,A><L,A><L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Repl.help1
                  `cast`
                (<[GHC.Base.String]>_R
                 ->_R Trans
                          (<System.Console.Haskeline.Term.RunTerm>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                     ->_R Trans
                                              (<GHC.IORef.IORef
                                                  System.Console.Haskeline.Command.KillRing.KillRing>_R
                                               ->_R Trans
                                                        (<System.Console.Haskeline.Prefs.Prefs>_R
                                                         ->_R Trans
                                                                  (<System.Console.Haskeline.InputT.Settings
                                                                      (Control.Monad.Trans.State.Strict.StateT
                                                                         Syntax.Ctx GHC.Types.IO)>_R
                                                                   ->_R Trans
                                                                            (<Syntax.Ctx>_R
                                                                             ->_R Sym (GHC.Types.N:IO[0]
                                                                                           <((),
                                                                                             Syntax.Ctx)>_R))
                                                                            (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                      <Syntax.Ctx>_N
                                                                                      <GHC.Types.IO>_R
                                                                                      <()>_N)))
                                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                            <*>_N
                                                                            <System.Console.Haskeline.InputT.Settings
                                                                               (Control.Monad.Trans.State.Strict.StateT
                                                                                  Syntax.Ctx
                                                                                  GHC.Types.IO)>_R
                                                                            <Control.Monad.Trans.State.Strict.StateT
                                                                               Syntax.Ctx
                                                                               GHC.Types.IO>_R
                                                                            <()>_N)))
                                                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                  <*>_N
                                                                  <System.Console.Haskeline.Prefs.Prefs>_R
                                                                  <Control.Monad.Trans.Reader.ReaderT
                                                                     (System.Console.Haskeline.InputT.Settings
                                                                        (Control.Monad.Trans.State.Strict.StateT
                                                                           Syntax.Ctx GHC.Types.IO))
                                                                     (Control.Monad.Trans.State.Strict.StateT
                                                                        Syntax.Ctx GHC.Types.IO)>_R
                                                                  <()>_N)))
                                              (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                        <*>_N
                                                        <GHC.IORef.IORef
                                                           System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                        <Control.Monad.Trans.Reader.ReaderT
                                                           System.Console.Haskeline.Prefs.Prefs
                                                           (Control.Monad.Trans.Reader.ReaderT
                                                              (System.Console.Haskeline.InputT.Settings
                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                    Syntax.Ctx GHC.Types.IO))
                                                              (Control.Monad.Trans.State.Strict.StateT
                                                                 Syntax.Ctx GHC.Types.IO))>_R
                                                        <()>_N)))
                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                              <*>_N
                                              <GHC.IORef.IORef
                                                 System.Console.Haskeline.History.History>_R
                                              <Control.Monad.Trans.Reader.ReaderT
                                                 (GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing)
                                                 (Control.Monad.Trans.Reader.ReaderT
                                                    System.Console.Haskeline.Prefs.Prefs
                                                    (Control.Monad.Trans.Reader.ReaderT
                                                       (System.Console.Haskeline.InputT.Settings
                                                          (Control.Monad.Trans.State.Strict.StateT
                                                             Syntax.Ctx GHC.Types.IO))
                                                       (Control.Monad.Trans.State.Strict.StateT
                                                          Syntax.Ctx GHC.Types.IO)))>_R
                                              <()>_N)))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                         <*>_N
                                         <System.Console.Haskeline.Term.RunTerm>_R
                                         <Control.Monad.Trans.Reader.ReaderT
                                            (GHC.IORef.IORef
                                               System.Console.Haskeline.History.History)
                                            (Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef
                                                  System.Console.Haskeline.Command.KillRing.KillRing)
                                               (Control.Monad.Trans.Reader.ReaderT
                                                  System.Console.Haskeline.Prefs.Prefs
                                                  (Control.Monad.Trans.Reader.ReaderT
                                                     (System.Console.Haskeline.InputT.Settings
                                                        (Control.Monad.Trans.State.Strict.StateT
                                                           Syntax.Ctx GHC.Types.IO))
                                                     (Control.Monad.Trans.State.Strict.StateT
                                                        Syntax.Ctx GHC.Types.IO))))>_R
                                         <()>_N))
                               (Trans
                                    (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                              <Control.Monad.Trans.State.Strict.StateT
                                                 Syntax.Ctx GHC.Types.IO>_R))
                                    (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                     Syntax.Ctx
                                                                                     GHC.Types.IO>_N) <()>_N))) -}
7f02c8df52219d188fb6ecf3021c1c4a
  help1 ::
    [GHC.Base.String]
    -> System.Console.Haskeline.Term.RunTerm
    -> GHC.IORef.IORef System.Console.Haskeline.History.History
    -> GHC.IORef.IORef
         System.Console.Haskeline.Command.KillRing.KillRing
    -> System.Console.Haskeline.Prefs.Prefs
    -> System.Console.Haskeline.InputT.Settings
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
    -> Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 8,
     Strictness: <L,1*U><L,A><L,A><L,A><L,A><L,A><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (8, True, True)
                (\ (w :: [GHC.Base.String])
                   (w1 :: System.Console.Haskeline.Term.RunTerm)
                   (w2 :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                   (w3 :: GHC.IORef.IORef
                            System.Console.Haskeline.Command.KillRing.KillRing)
                   (w4 :: System.Console.Haskeline.Prefs.Prefs)
                   (w5 :: System.Console.Haskeline.InputT.Settings
                            (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                   (w6 :: Syntax.Ctx)
                   (w7 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Repl.$whelp w w6 w7) -}
5ef926ed7a270a95f8933c852d1957cd
  help2 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
9bd7f79eedbb2422b7de96c9ec1cfd93
  ini :: Processor.Repl ()
  {- Arity: 7, Strictness: <L,A><L,A><L,A><L,A><L,A><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Repl.ini1
                  `cast`
                (Trans
                     (<System.Console.Haskeline.Term.RunTerm>_R
                      ->_R Trans
                               (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                ->_R Trans
                                         (<GHC.IORef.IORef
                                             System.Console.Haskeline.Command.KillRing.KillRing>_R
                                          ->_R Trans
                                                   (<System.Console.Haskeline.Prefs.Prefs>_R
                                                    ->_R Trans
                                                             (<System.Console.Haskeline.InputT.Settings
                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                    Syntax.Ctx GHC.Types.IO)>_R
                                                              ->_R Trans
                                                                       (<Syntax.Ctx>_R
                                                                        ->_R Sym (GHC.Types.N:IO[0]
                                                                                      <((),
                                                                                        Syntax.Ctx)>_R))
                                                                       (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                 <Syntax.Ctx>_N
                                                                                 <GHC.Types.IO>_R
                                                                                 <()>_N)))
                                                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                       <*>_N
                                                                       <System.Console.Haskeline.InputT.Settings
                                                                          (Control.Monad.Trans.State.Strict.StateT
                                                                             Syntax.Ctx
                                                                             GHC.Types.IO)>_R
                                                                       <Control.Monad.Trans.State.Strict.StateT
                                                                          Syntax.Ctx GHC.Types.IO>_R
                                                                       <()>_N)))
                                                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                             <*>_N
                                                             <System.Console.Haskeline.Prefs.Prefs>_R
                                                             <Control.Monad.Trans.Reader.ReaderT
                                                                (System.Console.Haskeline.InputT.Settings
                                                                   (Control.Monad.Trans.State.Strict.StateT
                                                                      Syntax.Ctx GHC.Types.IO))
                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                   Syntax.Ctx GHC.Types.IO)>_R
                                                             <()>_N)))
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef
                                                      System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                   <Control.Monad.Trans.Reader.ReaderT
                                                      System.Console.Haskeline.Prefs.Prefs
                                                      (Control.Monad.Trans.Reader.ReaderT
                                                         (System.Console.Haskeline.InputT.Settings
                                                            (Control.Monad.Trans.State.Strict.StateT
                                                               Syntax.Ctx GHC.Types.IO))
                                                         (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO))>_R
                                                   <()>_N)))
                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                         <*>_N
                                         <GHC.IORef.IORef
                                            System.Console.Haskeline.History.History>_R
                                         <Control.Monad.Trans.Reader.ReaderT
                                            (GHC.IORef.IORef
                                               System.Console.Haskeline.Command.KillRing.KillRing)
                                            (Control.Monad.Trans.Reader.ReaderT
                                               System.Console.Haskeline.Prefs.Prefs
                                               (Control.Monad.Trans.Reader.ReaderT
                                                  (System.Console.Haskeline.InputT.Settings
                                                     (Control.Monad.Trans.State.Strict.StateT
                                                        Syntax.Ctx GHC.Types.IO))
                                                  (Control.Monad.Trans.State.Strict.StateT
                                                     Syntax.Ctx GHC.Types.IO)))>_R
                                         <()>_N)))
                     (Trans
                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <System.Console.Haskeline.Term.RunTerm>_R
                                    <Control.Monad.Trans.Reader.ReaderT
                                       (GHC.IORef.IORef System.Console.Haskeline.History.History)
                                       (Control.Monad.Trans.Reader.ReaderT
                                          (GHC.IORef.IORef
                                             System.Console.Haskeline.Command.KillRing.KillRing)
                                          (Control.Monad.Trans.Reader.ReaderT
                                             System.Console.Haskeline.Prefs.Prefs
                                             (Control.Monad.Trans.Reader.ReaderT
                                                (System.Console.Haskeline.InputT.Settings
                                                   (Control.Monad.Trans.State.Strict.StateT
                                                      Syntax.Ctx GHC.Types.IO))
                                                (Control.Monad.Trans.State.Strict.StateT
                                                   Syntax.Ctx GHC.Types.IO))))>_R
                                    <()>_N))
                          (Trans
                               (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                         <Control.Monad.Trans.State.Strict.StateT
                                            Syntax.Ctx GHC.Types.IO>_R))
                               (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                Syntax.Ctx
                                                                                GHC.Types.IO>_N) <()>_N))) -}
0b99febeae7bdcfd76e3923f0fb0e2ef
  ini1 ::
    System.Console.Haskeline.Term.RunTerm
    -> GHC.IORef.IORef System.Console.Haskeline.History.History
    -> GHC.IORef.IORef
         System.Console.Haskeline.Command.KillRing.KillRing
    -> System.Console.Haskeline.Prefs.Prefs
    -> System.Console.Haskeline.InputT.Settings
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
    -> Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 7, Strictness: <L,A><L,A><L,A><L,A><L,A><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, True)
                (\ (w :: System.Console.Haskeline.Term.RunTerm)
                   (w1 :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                   (w2 :: GHC.IORef.IORef
                            System.Console.Haskeline.Command.KillRing.KillRing)
                   (w3 :: System.Console.Haskeline.Prefs.Prefs)
                   (w4 :: System.Console.Haskeline.InputT.Settings
                            (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                   (w5 :: Syntax.Ctx)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Repl.$wini w5 w6) -}
3efe5a6a89d37ade077dab84dfa1f033
  ini2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Welcome to gradSec!\n\
                   \\n"#) -}
e89a4754add64a3e0b5411a245d62f69
  load :: [GHC.Base.String] -> Processor.Repl ()
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (args :: [GHC.Base.String]) ->
                 case args of wild {
                   []
                   -> Repl.load1
                        `cast`
                      (Trans
                           (<System.Console.Haskeline.Term.RunTerm>_R
                            ->_R Trans
                                     (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                      ->_R Trans
                                               (<GHC.IORef.IORef
                                                   System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                ->_R Trans
                                                         (<System.Console.Haskeline.Prefs.Prefs>_R
                                                          ->_R Trans
                                                                   (<System.Console.Haskeline.InputT.Settings
                                                                       (Control.Monad.Trans.State.Strict.StateT
                                                                          Syntax.Ctx
                                                                          GHC.Types.IO)>_R
                                                                    ->_R Trans
                                                                             (<Syntax.Ctx>_R
                                                                              ->_R Sym (GHC.Types.N:IO[0]
                                                                                            <((),
                                                                                              Syntax.Ctx)>_R))
                                                                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                       <Syntax.Ctx>_N
                                                                                       <GHC.Types.IO>_R
                                                                                       <()>_N)))
                                                                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                             <*>_N
                                                                             <System.Console.Haskeline.InputT.Settings
                                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                                   Syntax.Ctx
                                                                                   GHC.Types.IO)>_R
                                                                             <Control.Monad.Trans.State.Strict.StateT
                                                                                Syntax.Ctx
                                                                                GHC.Types.IO>_R
                                                                             <()>_N)))
                                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                   <*>_N
                                                                   <System.Console.Haskeline.Prefs.Prefs>_R
                                                                   <Control.Monad.Trans.Reader.ReaderT
                                                                      (System.Console.Haskeline.InputT.Settings
                                                                         (Control.Monad.Trans.State.Strict.StateT
                                                                            Syntax.Ctx
                                                                            GHC.Types.IO))
                                                                      (Control.Monad.Trans.State.Strict.StateT
                                                                         Syntax.Ctx GHC.Types.IO)>_R
                                                                   <()>_N)))
                                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                         <*>_N
                                                         <GHC.IORef.IORef
                                                            System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                         <Control.Monad.Trans.Reader.ReaderT
                                                            System.Console.Haskeline.Prefs.Prefs
                                                            (Control.Monad.Trans.Reader.ReaderT
                                                               (System.Console.Haskeline.InputT.Settings
                                                                  (Control.Monad.Trans.State.Strict.StateT
                                                                     Syntax.Ctx GHC.Types.IO))
                                                               (Control.Monad.Trans.State.Strict.StateT
                                                                  Syntax.Ctx GHC.Types.IO))>_R
                                                         <()>_N)))
                                     (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                               <*>_N
                                               <GHC.IORef.IORef
                                                  System.Console.Haskeline.History.History>_R
                                               <Control.Monad.Trans.Reader.ReaderT
                                                  (GHC.IORef.IORef
                                                     System.Console.Haskeline.Command.KillRing.KillRing)
                                                  (Control.Monad.Trans.Reader.ReaderT
                                                     System.Console.Haskeline.Prefs.Prefs
                                                     (Control.Monad.Trans.Reader.ReaderT
                                                        (System.Console.Haskeline.InputT.Settings
                                                           (Control.Monad.Trans.State.Strict.StateT
                                                              Syntax.Ctx GHC.Types.IO))
                                                        (Control.Monad.Trans.State.Strict.StateT
                                                           Syntax.Ctx GHC.Types.IO)))>_R
                                               <()>_N)))
                           (Trans
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <System.Console.Haskeline.Term.RunTerm>_R
                                          <Control.Monad.Trans.Reader.ReaderT
                                             (GHC.IORef.IORef
                                                System.Console.Haskeline.History.History)
                                             (Control.Monad.Trans.Reader.ReaderT
                                                (GHC.IORef.IORef
                                                   System.Console.Haskeline.Command.KillRing.KillRing)
                                                (Control.Monad.Trans.Reader.ReaderT
                                                   System.Console.Haskeline.Prefs.Prefs
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      (System.Console.Haskeline.InputT.Settings
                                                         (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO))
                                                      (Control.Monad.Trans.State.Strict.StateT
                                                         Syntax.Ctx GHC.Types.IO))))>_R
                                          <()>_N))
                                (Trans
                                     (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                               <Control.Monad.Trans.State.Strict.StateT
                                                  Syntax.Ctx GHC.Types.IO>_R))
                                     (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                      Syntax.Ctx
                                                                                      GHC.Types.IO>_N) <()>_N)))
                   : ds1 ds2
                   -> let {
                        lvl44 :: [GHC.Types.Char]
                        = GHC.Base.++ @ GHC.Types.Char ds1 (Data.OldList.unwords_go ds2)
                      } in
                      let {
                        m1 :: GHC.Types.IO GHC.Types.Bool
                        = System.IO.Error.catchIOError
                            @ GHC.Types.Bool
                            (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case System.Posix.Files.getFileStatus1
                                    lvl44
                                    s of ds10 { (#,#) ipv ipv1 ->
                             System.Directory.doesFileExist1 ipv1 ipv })
                              `cast`
                            (Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                            System.Directory.doesDirectoryExist1
                              `cast`
                            (<GHC.IO.Exception.IOError>_R
                             ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R))
                      } in
                      let {
                        lvl45 :: [GHC.Types.Char]
                        = GHC.CString.unpackAppendCString#
                            "the file does not exist: "#
                            (GHC.Base.++ @ GHC.Types.Char ds1 (Data.OldList.unwords_go ds2))
                      } in
                      (\ (r1 :: System.Console.Haskeline.Term.RunTerm)
                         (eta :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                         (eta1 :: GHC.IORef.IORef
                                    System.Console.Haskeline.Command.KillRing.KillRing)
                         (eta2 :: System.Console.Haskeline.Prefs.Prefs)
                         (eta3 :: System.Console.Haskeline.InputT.Settings
                                    (Control.Monad.Trans.State.Strict.StateT
                                       Syntax.Ctx GHC.Types.IO))
                         (eta4 :: Syntax.Ctx)
                         (eta5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                       case m1 `cast` (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)
                              eta5 of ds4 { (#,#) ipv ipv1 ->
                       case ipv1 of wild1 {
                         GHC.Types.False
                         -> case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout
                                   lvl45
                                   GHC.Types.True
                                   ipv of ds5 { (#,#) ipv2 ipv3 ->
                            (# ipv2, (ipv3, eta4) #) }
                         GHC.Types.True
                         -> case GHC.IO.Handle.FD.openFile1
                                   lvl44
                                   GHC.IO.IOMode.ReadMode
                                   ipv of ds5 { (#,#) ipv2 ipv3 ->
                            case Data.Text.IO.getContents2
                                   ipv3
                                   ipv2 of ds6 { (#,#) ipv4 ipv5 ->
                            (((((((Processor.processStatic
                                     @ (System.Console.Repline.HaskelineT
                                          (Control.Monad.Trans.State.Strict.StateT
                                             Syntax.Ctx GHC.Types.IO))
                                     Repl.$fMonadThrowHaskelineT_$s$fMonadHaskelineT
                                     Repl.$s$fMonadIOHaskelineT
                                     Repl.$fMonadThrowHaskelineT_$s$fMonadThrowHaskelineT
                                     Repl.$s$fMonadStatesHaskelineT
                                     ipv5
                                     GHC.Types.False)
                                    `cast`
                                  (Trans
                                       (Trans
                                            (System.Console.Repline.N:HaskelineT[0] <Control.Monad.Trans.State.Strict.StateT
                                                                                       Syntax.Ctx
                                                                                       GHC.Types.IO>_N)
                                            (System.Console.Haskeline.InputT.N:InputT[0]
                                                 <Control.Monad.Trans.State.Strict.StateT
                                                    Syntax.Ctx GHC.Types.IO>_R) <()>_N)
                                       (Control.Monad.Trans.Reader.N:ReaderT[0]
                                            <*>_N
                                            <System.Console.Haskeline.Term.RunTerm>_R
                                            <Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef
                                                  System.Console.Haskeline.History.History)
                                               (Control.Monad.Trans.Reader.ReaderT
                                                  (GHC.IORef.IORef
                                                     System.Console.Haskeline.Command.KillRing.KillRing)
                                                  (Control.Monad.Trans.Reader.ReaderT
                                                     System.Console.Haskeline.Prefs.Prefs
                                                     (Control.Monad.Trans.Reader.ReaderT
                                                        (System.Console.Haskeline.InputT.Settings
                                                           (Control.Monad.Trans.State.Strict.StateT
                                                              Syntax.Ctx GHC.Types.IO))
                                                        (Control.Monad.Trans.State.Strict.StateT
                                                           Syntax.Ctx GHC.Types.IO))))>_R
                                            <()>_N))
                                    r1)
                                   `cast`
                                 (Control.Monad.Trans.Reader.N:ReaderT[0]
                                      <*>_N
                                      <GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                      <Control.Monad.Trans.Reader.ReaderT
                                         (GHC.IORef.IORef
                                            System.Console.Haskeline.Command.KillRing.KillRing)
                                         (Control.Monad.Trans.Reader.ReaderT
                                            System.Console.Haskeline.Prefs.Prefs
                                            (Control.Monad.Trans.Reader.ReaderT
                                               (System.Console.Haskeline.InputT.Settings
                                                  (Control.Monad.Trans.State.Strict.StateT
                                                     Syntax.Ctx GHC.Types.IO))
                                               (Control.Monad.Trans.State.Strict.StateT
                                                  Syntax.Ctx GHC.Types.IO)))>_R
                                      <()>_N)
                                   eta)
                                  `cast`
                                (Control.Monad.Trans.Reader.N:ReaderT[0]
                                     <*>_N
                                     <GHC.IORef.IORef
                                        System.Console.Haskeline.Command.KillRing.KillRing>_R
                                     <Control.Monad.Trans.Reader.ReaderT
                                        System.Console.Haskeline.Prefs.Prefs
                                        (Control.Monad.Trans.Reader.ReaderT
                                           (System.Console.Haskeline.InputT.Settings
                                              (Control.Monad.Trans.State.Strict.StateT
                                                 Syntax.Ctx GHC.Types.IO))
                                           (Control.Monad.Trans.State.Strict.StateT
                                              Syntax.Ctx GHC.Types.IO))>_R
                                     <()>_N)
                                  eta1)
                                 `cast`
                               (Control.Monad.Trans.Reader.N:ReaderT[0]
                                    <*>_N
                                    <System.Console.Haskeline.Prefs.Prefs>_R
                                    <Control.Monad.Trans.Reader.ReaderT
                                       (System.Console.Haskeline.InputT.Settings
                                          (Control.Monad.Trans.State.Strict.StateT
                                             Syntax.Ctx GHC.Types.IO))
                                       (Control.Monad.Trans.State.Strict.StateT
                                          Syntax.Ctx GHC.Types.IO)>_R
                                    <()>_N)
                                 eta2)
                                `cast`
                              (Control.Monad.Trans.Reader.N:ReaderT[0]
                                   <*>_N
                                   <System.Console.Haskeline.InputT.Settings
                                      (Control.Monad.Trans.State.Strict.StateT
                                         Syntax.Ctx GHC.Types.IO)>_R
                                   <Control.Monad.Trans.State.Strict.StateT
                                      Syntax.Ctx GHC.Types.IO>_R
                                   <()>_N)
                                eta3)
                               `cast`
                             (Control.Monad.Trans.State.Strict.N:StateT[0]
                                  <Syntax.Ctx>_N <GHC.Types.IO>_R <()>_N)
                               eta4)
                              `cast`
                            (GHC.Types.N:IO[0] <((), Syntax.Ctx)>_R)
                              ipv4 } } } })
                        `cast`
                      (Trans
                           (<System.Console.Haskeline.Term.RunTerm>_R
                            ->_R Trans
                                     (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                      ->_R Trans
                                               (<GHC.IORef.IORef
                                                   System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                ->_R Trans
                                                         (<System.Console.Haskeline.Prefs.Prefs>_R
                                                          ->_R Trans
                                                                   (<System.Console.Haskeline.InputT.Settings
                                                                       (Control.Monad.Trans.State.Strict.StateT
                                                                          Syntax.Ctx
                                                                          GHC.Types.IO)>_R
                                                                    ->_R Trans
                                                                             (<Syntax.Ctx>_R
                                                                              ->_R Sym (GHC.Types.N:IO[0]
                                                                                            <((),
                                                                                              Syntax.Ctx)>_R))
                                                                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                       <Syntax.Ctx>_N
                                                                                       <GHC.Types.IO>_R
                                                                                       <()>_N)))
                                                                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                             <*>_N
                                                                             <System.Console.Haskeline.InputT.Settings
                                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                                   Syntax.Ctx
                                                                                   GHC.Types.IO)>_R
                                                                             <Control.Monad.Trans.State.Strict.StateT
                                                                                Syntax.Ctx
                                                                                GHC.Types.IO>_R
                                                                             <()>_N)))
                                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                   <*>_N
                                                                   <System.Console.Haskeline.Prefs.Prefs>_R
                                                                   <Control.Monad.Trans.Reader.ReaderT
                                                                      (System.Console.Haskeline.InputT.Settings
                                                                         (Control.Monad.Trans.State.Strict.StateT
                                                                            Syntax.Ctx
                                                                            GHC.Types.IO))
                                                                      (Control.Monad.Trans.State.Strict.StateT
                                                                         Syntax.Ctx GHC.Types.IO)>_R
                                                                   <()>_N)))
                                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                         <*>_N
                                                         <GHC.IORef.IORef
                                                            System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                         <Control.Monad.Trans.Reader.ReaderT
                                                            System.Console.Haskeline.Prefs.Prefs
                                                            (Control.Monad.Trans.Reader.ReaderT
                                                               (System.Console.Haskeline.InputT.Settings
                                                                  (Control.Monad.Trans.State.Strict.StateT
                                                                     Syntax.Ctx GHC.Types.IO))
                                                               (Control.Monad.Trans.State.Strict.StateT
                                                                  Syntax.Ctx GHC.Types.IO))>_R
                                                         <()>_N)))
                                     (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                               <*>_N
                                               <GHC.IORef.IORef
                                                  System.Console.Haskeline.History.History>_R
                                               <Control.Monad.Trans.Reader.ReaderT
                                                  (GHC.IORef.IORef
                                                     System.Console.Haskeline.Command.KillRing.KillRing)
                                                  (Control.Monad.Trans.Reader.ReaderT
                                                     System.Console.Haskeline.Prefs.Prefs
                                                     (Control.Monad.Trans.Reader.ReaderT
                                                        (System.Console.Haskeline.InputT.Settings
                                                           (Control.Monad.Trans.State.Strict.StateT
                                                              Syntax.Ctx GHC.Types.IO))
                                                        (Control.Monad.Trans.State.Strict.StateT
                                                           Syntax.Ctx GHC.Types.IO)))>_R
                                               <()>_N)))
                           (Trans
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <System.Console.Haskeline.Term.RunTerm>_R
                                          <Control.Monad.Trans.Reader.ReaderT
                                             (GHC.IORef.IORef
                                                System.Console.Haskeline.History.History)
                                             (Control.Monad.Trans.Reader.ReaderT
                                                (GHC.IORef.IORef
                                                   System.Console.Haskeline.Command.KillRing.KillRing)
                                                (Control.Monad.Trans.Reader.ReaderT
                                                   System.Console.Haskeline.Prefs.Prefs
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      (System.Console.Haskeline.InputT.Settings
                                                         (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO))
                                                      (Control.Monad.Trans.State.Strict.StateT
                                                         Syntax.Ctx GHC.Types.IO))))>_R
                                          <()>_N))
                                (Trans
                                     (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                               <Control.Monad.Trans.State.Strict.StateT
                                                  Syntax.Ctx GHC.Types.IO>_R))
                                     (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                      Syntax.Ctx
                                                                                      GHC.Types.IO>_N) <()>_N))) }) -}
bed09c64e4328b6cca99f628caf90c41
  load1 ::
    System.Console.Haskeline.Term.RunTerm
    -> GHC.IORef.IORef System.Console.Haskeline.History.History
    -> GHC.IORef.IORef
         System.Console.Haskeline.Command.KillRing.KillRing
    -> System.Console.Haskeline.Prefs.Prefs
    -> System.Console.Haskeline.InputT.Settings
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
    -> Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 7, Strictness: <L,A><L,A><L,A><L,A><L,A><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, True)
                (\ (w :: System.Console.Haskeline.Term.RunTerm)
                   (w1 :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                   (w2 :: GHC.IORef.IORef
                            System.Console.Haskeline.Command.KillRing.KillRing)
                   (w3 :: System.Console.Haskeline.Prefs.Prefs)
                   (w4 :: System.Console.Haskeline.InputT.Settings
                            (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                   (w5 :: Syntax.Ctx)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Repl.$wlvl1 w5 w6) -}
f6feffbd6219fb284b547e260b35f62e
  load2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "you must enter a filename"#) -}
7e721db15e479ab242980736d9129643
  options ::
    [(GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())
                   Repl.options18
                   Repl.options1) -}
64e7ae46f2a45ee8053e9d49fd507ad0
  options1 ::
    [(GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())
                   Repl.options16
                   Repl.options2) -}
ab86530daa38ae9f441a9296cd48012e
  options10 ::
    ([GHC.Types.Char], [GHC.Base.String] -> Processor.Repl ())
  {- Strictness: m,
     Unfolding: ((Repl.options11,
                  Repl.help1
                    `cast`
                  (<[GHC.Base.String]>_R
                   ->_R Trans
                            (<System.Console.Haskeline.Term.RunTerm>_R
                             ->_R Trans
                                      (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                       ->_R Trans
                                                (<GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                 ->_R Trans
                                                          (<System.Console.Haskeline.Prefs.Prefs>_R
                                                           ->_R Trans
                                                                    (<System.Console.Haskeline.InputT.Settings
                                                                        (Control.Monad.Trans.State.Strict.StateT
                                                                           Syntax.Ctx
                                                                           GHC.Types.IO)>_R
                                                                     ->_R Trans
                                                                              (<Syntax.Ctx>_R
                                                                               ->_R Sym (GHC.Types.N:IO[0]
                                                                                             <((),
                                                                                               Syntax.Ctx)>_R))
                                                                              (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                        <Syntax.Ctx>_N
                                                                                        <GHC.Types.IO>_R
                                                                                        <()>_N)))
                                                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                              <*>_N
                                                                              <System.Console.Haskeline.InputT.Settings
                                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                                    Syntax.Ctx
                                                                                    GHC.Types.IO)>_R
                                                                              <Control.Monad.Trans.State.Strict.StateT
                                                                                 Syntax.Ctx
                                                                                 GHC.Types.IO>_R
                                                                              <()>_N)))
                                                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <System.Console.Haskeline.Prefs.Prefs>_R
                                                                    <Control.Monad.Trans.Reader.ReaderT
                                                                       (System.Console.Haskeline.InputT.Settings
                                                                          (Control.Monad.Trans.State.Strict.StateT
                                                                             Syntax.Ctx
                                                                             GHC.Types.IO))
                                                                       (Control.Monad.Trans.State.Strict.StateT
                                                                          Syntax.Ctx
                                                                          GHC.Types.IO)>_R
                                                                    <()>_N)))
                                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <*>_N
                                                          <GHC.IORef.IORef
                                                             System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                          <Control.Monad.Trans.Reader.ReaderT
                                                             System.Console.Haskeline.Prefs.Prefs
                                                             (Control.Monad.Trans.Reader.ReaderT
                                                                (System.Console.Haskeline.InputT.Settings
                                                                   (Control.Monad.Trans.State.Strict.StateT
                                                                      Syntax.Ctx GHC.Types.IO))
                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                   Syntax.Ctx GHC.Types.IO))>_R
                                                          <()>_N)))
                                      (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                <*>_N
                                                <GHC.IORef.IORef
                                                   System.Console.Haskeline.History.History>_R
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   (GHC.IORef.IORef
                                                      System.Console.Haskeline.Command.KillRing.KillRing)
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      System.Console.Haskeline.Prefs.Prefs
                                                      (Control.Monad.Trans.Reader.ReaderT
                                                         (System.Console.Haskeline.InputT.Settings
                                                            (Control.Monad.Trans.State.Strict.StateT
                                                               Syntax.Ctx GHC.Types.IO))
                                                         (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO)))>_R
                                                <()>_N)))
                            (Trans
                                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                           <*>_N
                                           <System.Console.Haskeline.Term.RunTerm>_R
                                           <Control.Monad.Trans.Reader.ReaderT
                                              (GHC.IORef.IORef
                                                 System.Console.Haskeline.History.History)
                                              (Control.Monad.Trans.Reader.ReaderT
                                                 (GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing)
                                                 (Control.Monad.Trans.Reader.ReaderT
                                                    System.Console.Haskeline.Prefs.Prefs
                                                    (Control.Monad.Trans.Reader.ReaderT
                                                       (System.Console.Haskeline.InputT.Settings
                                                          (Control.Monad.Trans.State.Strict.StateT
                                                             Syntax.Ctx GHC.Types.IO))
                                                       (Control.Monad.Trans.State.Strict.StateT
                                                          Syntax.Ctx GHC.Types.IO))))>_R
                                           <()>_N))
                                 (Trans
                                      (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                                <Control.Monad.Trans.State.Strict.StateT
                                                   Syntax.Ctx GHC.Types.IO>_R))
                                      (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                       Syntax.Ctx
                                                                                       GHC.Types.IO>_N) <()>_N))))) -}
861c85ab73b2a59d1bc393a88c978dd0
  options11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "?"#) -}
64fb8e91214bb152bd563ffafba8d6e9
  options12 ::
    ([GHC.Types.Char], [GHC.Base.String] -> Processor.Repl ())
  {- Strictness: m,
     Unfolding: ((Repl.options15,
                  (Repl.options13 @ [GHC.Base.String])
                    `cast`
                  (<[GHC.Base.String]>_R
                   ->_R Trans
                            (<System.Console.Haskeline.Term.RunTerm>_R
                             ->_R Trans
                                      (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                       ->_R Trans
                                                (<GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                 ->_R Trans
                                                          (<System.Console.Haskeline.Prefs.Prefs>_R
                                                           ->_R Trans
                                                                    (<System.Console.Haskeline.InputT.Settings
                                                                        (Control.Monad.Trans.State.Strict.StateT
                                                                           Syntax.Ctx
                                                                           GHC.Types.IO)>_R
                                                                     ->_R Trans
                                                                              (<Syntax.Ctx>_R
                                                                               ->_R Sym (GHC.Types.N:IO[0]
                                                                                             <((),
                                                                                               Syntax.Ctx)>_R))
                                                                              (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                        <Syntax.Ctx>_N
                                                                                        <GHC.Types.IO>_R
                                                                                        <()>_N)))
                                                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                              <*>_N
                                                                              <System.Console.Haskeline.InputT.Settings
                                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                                    Syntax.Ctx
                                                                                    GHC.Types.IO)>_R
                                                                              <Control.Monad.Trans.State.Strict.StateT
                                                                                 Syntax.Ctx
                                                                                 GHC.Types.IO>_R
                                                                              <()>_N)))
                                                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <System.Console.Haskeline.Prefs.Prefs>_R
                                                                    <Control.Monad.Trans.Reader.ReaderT
                                                                       (System.Console.Haskeline.InputT.Settings
                                                                          (Control.Monad.Trans.State.Strict.StateT
                                                                             Syntax.Ctx
                                                                             GHC.Types.IO))
                                                                       (Control.Monad.Trans.State.Strict.StateT
                                                                          Syntax.Ctx
                                                                          GHC.Types.IO)>_R
                                                                    <()>_N)))
                                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <*>_N
                                                          <GHC.IORef.IORef
                                                             System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                          <Control.Monad.Trans.Reader.ReaderT
                                                             System.Console.Haskeline.Prefs.Prefs
                                                             (Control.Monad.Trans.Reader.ReaderT
                                                                (System.Console.Haskeline.InputT.Settings
                                                                   (Control.Monad.Trans.State.Strict.StateT
                                                                      Syntax.Ctx GHC.Types.IO))
                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                   Syntax.Ctx GHC.Types.IO))>_R
                                                          <()>_N)))
                                      (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                <*>_N
                                                <GHC.IORef.IORef
                                                   System.Console.Haskeline.History.History>_R
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   (GHC.IORef.IORef
                                                      System.Console.Haskeline.Command.KillRing.KillRing)
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      System.Console.Haskeline.Prefs.Prefs
                                                      (Control.Monad.Trans.Reader.ReaderT
                                                         (System.Console.Haskeline.InputT.Settings
                                                            (Control.Monad.Trans.State.Strict.StateT
                                                               Syntax.Ctx GHC.Types.IO))
                                                         (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO)))>_R
                                                <()>_N)))
                            (Trans
                                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                           <*>_N
                                           <System.Console.Haskeline.Term.RunTerm>_R
                                           <Control.Monad.Trans.Reader.ReaderT
                                              (GHC.IORef.IORef
                                                 System.Console.Haskeline.History.History)
                                              (Control.Monad.Trans.Reader.ReaderT
                                                 (GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing)
                                                 (Control.Monad.Trans.Reader.ReaderT
                                                    System.Console.Haskeline.Prefs.Prefs
                                                    (Control.Monad.Trans.Reader.ReaderT
                                                       (System.Console.Haskeline.InputT.Settings
                                                          (Control.Monad.Trans.State.Strict.StateT
                                                             Syntax.Ctx GHC.Types.IO))
                                                       (Control.Monad.Trans.State.Strict.StateT
                                                          Syntax.Ctx GHC.Types.IO))))>_R
                                           <()>_N))
                                 (Trans
                                      (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                                <Control.Monad.Trans.State.Strict.StateT
                                                   Syntax.Ctx GHC.Types.IO>_R))
                                      (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                       Syntax.Ctx
                                                                                       GHC.Types.IO>_N) <()>_N))))) -}
de040f8ec7eebfa0f2fe7ccf8a5c7bea
  options13 ::
    a
    -> System.Console.Haskeline.Term.RunTerm
    -> GHC.IORef.IORef System.Console.Haskeline.History.History
    -> GHC.IORef.IORef
         System.Console.Haskeline.Command.KillRing.KillRing
    -> System.Console.Haskeline.Prefs.Prefs
    -> System.Console.Haskeline.InputT.Settings
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
    -> Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 8, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ a
                   (ds :: a)
                   (eta :: System.Console.Haskeline.Term.RunTerm)
                   (eta1 :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                   (eta2 :: GHC.IORef.IORef
                              System.Console.Haskeline.Command.KillRing.KillRing)
                   (eta3 :: System.Console.Haskeline.Prefs.Prefs)
                   (eta4 :: System.Console.Haskeline.InputT.Settings
                              (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                   (eta5 :: Syntax.Ctx)
                   (eta6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Repl.options14 eta eta1 eta2 eta3 eta4 eta5 eta6) -}
f63daf93cd110717989f19e1e3e772a4
  options14 ::
    System.Console.Haskeline.Term.RunTerm
    -> GHC.IORef.IORef System.Console.Haskeline.History.History
    -> GHC.IORef.IORef
         System.Console.Haskeline.Command.KillRing.KillRing
    -> System.Console.Haskeline.Prefs.Prefs
    -> System.Console.Haskeline.InputT.Settings
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
    -> Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 7, Strictness: <B,A><B,A><B,A><B,A><B,A><B,A><B,U>b,
     Unfolding: InlineRule (7, True, False)
                (\ (ds :: System.Console.Haskeline.Term.RunTerm)
                   (eta1 :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                   (eta2 :: GHC.IORef.IORef
                              System.Console.Haskeline.Command.KillRing.KillRing)
                   (eta3 :: System.Console.Haskeline.Prefs.Prefs)
                   (eta4 :: System.Console.Haskeline.InputT.Settings
                              (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                   (eta :: Syntax.Ctx)
                   (eta7 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ ()
                        (GHC.IO.Exception.$fExceptionExitCode_$ctoException
                           GHC.IO.Exception.ExitSuccess)
                        eta7
                 ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
                 of {}) -}
732bd0aadf34d2d73e6507c95bf54c73
  options15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "quit"#) -}
ecb8d38b0ea06ae1ac0cf98d70c08f45
  options16 ::
    ([GHC.Types.Char], [GHC.Base.String] -> Processor.Repl ())
  {- Strictness: m, Unfolding: ((Repl.options17, Repl.typeof)) -}
e97791f14ada696b866d391922de09d6
  options17 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "typeof"#) -}
ee0f2073c051c48816436a509ffa61df
  options18 ::
    ([GHC.Types.Char], [GHC.Base.String] -> Processor.Repl ())
  {- Strictness: m,
     Unfolding: ((Repl.options19,
                  Repl.browse1
                    `cast`
                  (<[GHC.Base.String]>_R
                   ->_R Trans
                            (<System.Console.Haskeline.Term.RunTerm>_R
                             ->_R Trans
                                      (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                       ->_R Trans
                                                (<GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                 ->_R Trans
                                                          (<System.Console.Haskeline.Prefs.Prefs>_R
                                                           ->_R Trans
                                                                    (<System.Console.Haskeline.InputT.Settings
                                                                        (Control.Monad.Trans.State.Strict.StateT
                                                                           Syntax.Ctx
                                                                           GHC.Types.IO)>_R
                                                                     ->_R Trans
                                                                              (<Syntax.Ctx>_R
                                                                               ->_R Sym (GHC.Types.N:IO[0]
                                                                                             <((),
                                                                                               Syntax.Ctx)>_R))
                                                                              (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                        <Syntax.Ctx>_N
                                                                                        <GHC.Types.IO>_R
                                                                                        <()>_N)))
                                                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                              <*>_N
                                                                              <System.Console.Haskeline.InputT.Settings
                                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                                    Syntax.Ctx
                                                                                    GHC.Types.IO)>_R
                                                                              <Control.Monad.Trans.State.Strict.StateT
                                                                                 Syntax.Ctx
                                                                                 GHC.Types.IO>_R
                                                                              <()>_N)))
                                                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <System.Console.Haskeline.Prefs.Prefs>_R
                                                                    <Control.Monad.Trans.Reader.ReaderT
                                                                       (System.Console.Haskeline.InputT.Settings
                                                                          (Control.Monad.Trans.State.Strict.StateT
                                                                             Syntax.Ctx
                                                                             GHC.Types.IO))
                                                                       (Control.Monad.Trans.State.Strict.StateT
                                                                          Syntax.Ctx
                                                                          GHC.Types.IO)>_R
                                                                    <()>_N)))
                                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <*>_N
                                                          <GHC.IORef.IORef
                                                             System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                          <Control.Monad.Trans.Reader.ReaderT
                                                             System.Console.Haskeline.Prefs.Prefs
                                                             (Control.Monad.Trans.Reader.ReaderT
                                                                (System.Console.Haskeline.InputT.Settings
                                                                   (Control.Monad.Trans.State.Strict.StateT
                                                                      Syntax.Ctx GHC.Types.IO))
                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                   Syntax.Ctx GHC.Types.IO))>_R
                                                          <()>_N)))
                                      (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                <*>_N
                                                <GHC.IORef.IORef
                                                   System.Console.Haskeline.History.History>_R
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   (GHC.IORef.IORef
                                                      System.Console.Haskeline.Command.KillRing.KillRing)
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      System.Console.Haskeline.Prefs.Prefs
                                                      (Control.Monad.Trans.Reader.ReaderT
                                                         (System.Console.Haskeline.InputT.Settings
                                                            (Control.Monad.Trans.State.Strict.StateT
                                                               Syntax.Ctx GHC.Types.IO))
                                                         (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO)))>_R
                                                <()>_N)))
                            (Trans
                                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                           <*>_N
                                           <System.Console.Haskeline.Term.RunTerm>_R
                                           <Control.Monad.Trans.Reader.ReaderT
                                              (GHC.IORef.IORef
                                                 System.Console.Haskeline.History.History)
                                              (Control.Monad.Trans.Reader.ReaderT
                                                 (GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing)
                                                 (Control.Monad.Trans.Reader.ReaderT
                                                    System.Console.Haskeline.Prefs.Prefs
                                                    (Control.Monad.Trans.Reader.ReaderT
                                                       (System.Console.Haskeline.InputT.Settings
                                                          (Control.Monad.Trans.State.Strict.StateT
                                                             Syntax.Ctx GHC.Types.IO))
                                                       (Control.Monad.Trans.State.Strict.StateT
                                                          Syntax.Ctx GHC.Types.IO))))>_R
                                           <()>_N))
                                 (Trans
                                      (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                                <Control.Monad.Trans.State.Strict.StateT
                                                   Syntax.Ctx GHC.Types.IO>_R))
                                      (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                       Syntax.Ctx
                                                                                       GHC.Types.IO>_N) <()>_N))))) -}
82253b4f8ff3f134a00cf8e663261ecb
  options19 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "browse"#) -}
f8827892d12584d692b35c879bc2e1ac
  options2 ::
    [(GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())
                   Repl.options12
                   Repl.options3) -}
67f84b05cbdbe6acd5069bd630c330a1
  options3 ::
    [(GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())
                   Repl.options10
                   Repl.options4) -}
4b8247aee22f1437b7614db14cd06b54
  options4 ::
    [(GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())
                   Repl.options8
                   Repl.options5) -}
4f6b09361be2afbc8b5c1ec12e636f9d
  options5 ::
    [(GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ (GHC.Base.String, [GHC.Base.String] -> Processor.Repl ())
                   Repl.options6
                   (GHC.Types.[]
                      @ (GHC.Base.String, [GHC.Base.String] -> Processor.Repl ()))) -}
489f06c86e2fa7b158232577463f67be
  options6 ::
    ([GHC.Types.Char], [GHC.Base.String] -> Processor.Repl ())
  {- Strictness: m, Unfolding: ((Repl.options7, Repl.load)) -}
03d68bec1f70842e7d01e7e95043a148
  options7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "load"#) -}
000935861941460d4f15ebd167637755
  options8 ::
    ([GHC.Types.Char], [GHC.Base.String] -> Processor.Repl ())
  {- Strictness: m,
     Unfolding: ((Repl.options9,
                  Repl.help1
                    `cast`
                  (<[GHC.Base.String]>_R
                   ->_R Trans
                            (<System.Console.Haskeline.Term.RunTerm>_R
                             ->_R Trans
                                      (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                       ->_R Trans
                                                (<GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                 ->_R Trans
                                                          (<System.Console.Haskeline.Prefs.Prefs>_R
                                                           ->_R Trans
                                                                    (<System.Console.Haskeline.InputT.Settings
                                                                        (Control.Monad.Trans.State.Strict.StateT
                                                                           Syntax.Ctx
                                                                           GHC.Types.IO)>_R
                                                                     ->_R Trans
                                                                              (<Syntax.Ctx>_R
                                                                               ->_R Sym (GHC.Types.N:IO[0]
                                                                                             <((),
                                                                                               Syntax.Ctx)>_R))
                                                                              (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                        <Syntax.Ctx>_N
                                                                                        <GHC.Types.IO>_R
                                                                                        <()>_N)))
                                                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                              <*>_N
                                                                              <System.Console.Haskeline.InputT.Settings
                                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                                    Syntax.Ctx
                                                                                    GHC.Types.IO)>_R
                                                                              <Control.Monad.Trans.State.Strict.StateT
                                                                                 Syntax.Ctx
                                                                                 GHC.Types.IO>_R
                                                                              <()>_N)))
                                                          (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                    <*>_N
                                                                    <System.Console.Haskeline.Prefs.Prefs>_R
                                                                    <Control.Monad.Trans.Reader.ReaderT
                                                                       (System.Console.Haskeline.InputT.Settings
                                                                          (Control.Monad.Trans.State.Strict.StateT
                                                                             Syntax.Ctx
                                                                             GHC.Types.IO))
                                                                       (Control.Monad.Trans.State.Strict.StateT
                                                                          Syntax.Ctx
                                                                          GHC.Types.IO)>_R
                                                                    <()>_N)))
                                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                          <*>_N
                                                          <GHC.IORef.IORef
                                                             System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                          <Control.Monad.Trans.Reader.ReaderT
                                                             System.Console.Haskeline.Prefs.Prefs
                                                             (Control.Monad.Trans.Reader.ReaderT
                                                                (System.Console.Haskeline.InputT.Settings
                                                                   (Control.Monad.Trans.State.Strict.StateT
                                                                      Syntax.Ctx GHC.Types.IO))
                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                   Syntax.Ctx GHC.Types.IO))>_R
                                                          <()>_N)))
                                      (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                <*>_N
                                                <GHC.IORef.IORef
                                                   System.Console.Haskeline.History.History>_R
                                                <Control.Monad.Trans.Reader.ReaderT
                                                   (GHC.IORef.IORef
                                                      System.Console.Haskeline.Command.KillRing.KillRing)
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      System.Console.Haskeline.Prefs.Prefs
                                                      (Control.Monad.Trans.Reader.ReaderT
                                                         (System.Console.Haskeline.InputT.Settings
                                                            (Control.Monad.Trans.State.Strict.StateT
                                                               Syntax.Ctx GHC.Types.IO))
                                                         (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO)))>_R
                                                <()>_N)))
                            (Trans
                                 (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                           <*>_N
                                           <System.Console.Haskeline.Term.RunTerm>_R
                                           <Control.Monad.Trans.Reader.ReaderT
                                              (GHC.IORef.IORef
                                                 System.Console.Haskeline.History.History)
                                              (Control.Monad.Trans.Reader.ReaderT
                                                 (GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing)
                                                 (Control.Monad.Trans.Reader.ReaderT
                                                    System.Console.Haskeline.Prefs.Prefs
                                                    (Control.Monad.Trans.Reader.ReaderT
                                                       (System.Console.Haskeline.InputT.Settings
                                                          (Control.Monad.Trans.State.Strict.StateT
                                                             Syntax.Ctx GHC.Types.IO))
                                                       (Control.Monad.Trans.State.Strict.StateT
                                                          Syntax.Ctx GHC.Types.IO))))>_R
                                           <()>_N))
                                 (Trans
                                      (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                                <Control.Monad.Trans.State.Strict.StateT
                                                   Syntax.Ctx GHC.Types.IO>_R))
                                      (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                       Syntax.Ctx
                                                                                       GHC.Types.IO>_N) <()>_N))))) -}
8a9cdc4d973942612f138e1d69e837f4
  options9 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "help"#) -}
b3c1ba831f616d72fd7134c5a1a8496a
  quit :: a -> Processor.Repl ()
  {- Arity: 8, Strictness: <L,A>,
     Unfolding: InlineRule (0, True, True)
                Repl.options13
                  `cast`
                (forall (a :: <*>_N).
                 <a>_R
                 ->_R Trans
                          (<System.Console.Haskeline.Term.RunTerm>_R
                           ->_R Trans
                                    (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                     ->_R Trans
                                              (<GHC.IORef.IORef
                                                  System.Console.Haskeline.Command.KillRing.KillRing>_R
                                               ->_R Trans
                                                        (<System.Console.Haskeline.Prefs.Prefs>_R
                                                         ->_R Trans
                                                                  (<System.Console.Haskeline.InputT.Settings
                                                                      (Control.Monad.Trans.State.Strict.StateT
                                                                         Syntax.Ctx GHC.Types.IO)>_R
                                                                   ->_R Trans
                                                                            (<Syntax.Ctx>_R
                                                                             ->_R Sym (GHC.Types.N:IO[0]
                                                                                           <((),
                                                                                             Syntax.Ctx)>_R))
                                                                            (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                      <Syntax.Ctx>_N
                                                                                      <GHC.Types.IO>_R
                                                                                      <()>_N)))
                                                                  (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                            <*>_N
                                                                            <System.Console.Haskeline.InputT.Settings
                                                                               (Control.Monad.Trans.State.Strict.StateT
                                                                                  Syntax.Ctx
                                                                                  GHC.Types.IO)>_R
                                                                            <Control.Monad.Trans.State.Strict.StateT
                                                                               Syntax.Ctx
                                                                               GHC.Types.IO>_R
                                                                            <()>_N)))
                                                        (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                  <*>_N
                                                                  <System.Console.Haskeline.Prefs.Prefs>_R
                                                                  <Control.Monad.Trans.Reader.ReaderT
                                                                     (System.Console.Haskeline.InputT.Settings
                                                                        (Control.Monad.Trans.State.Strict.StateT
                                                                           Syntax.Ctx GHC.Types.IO))
                                                                     (Control.Monad.Trans.State.Strict.StateT
                                                                        Syntax.Ctx GHC.Types.IO)>_R
                                                                  <()>_N)))
                                              (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                        <*>_N
                                                        <GHC.IORef.IORef
                                                           System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                        <Control.Monad.Trans.Reader.ReaderT
                                                           System.Console.Haskeline.Prefs.Prefs
                                                           (Control.Monad.Trans.Reader.ReaderT
                                                              (System.Console.Haskeline.InputT.Settings
                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                    Syntax.Ctx GHC.Types.IO))
                                                              (Control.Monad.Trans.State.Strict.StateT
                                                                 Syntax.Ctx GHC.Types.IO))>_R
                                                        <()>_N)))
                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                              <*>_N
                                              <GHC.IORef.IORef
                                                 System.Console.Haskeline.History.History>_R
                                              <Control.Monad.Trans.Reader.ReaderT
                                                 (GHC.IORef.IORef
                                                    System.Console.Haskeline.Command.KillRing.KillRing)
                                                 (Control.Monad.Trans.Reader.ReaderT
                                                    System.Console.Haskeline.Prefs.Prefs
                                                    (Control.Monad.Trans.Reader.ReaderT
                                                       (System.Console.Haskeline.InputT.Settings
                                                          (Control.Monad.Trans.State.Strict.StateT
                                                             Syntax.Ctx GHC.Types.IO))
                                                       (Control.Monad.Trans.State.Strict.StateT
                                                          Syntax.Ctx GHC.Types.IO)))>_R
                                              <()>_N)))
                          (Trans
                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                         <*>_N
                                         <System.Console.Haskeline.Term.RunTerm>_R
                                         <Control.Monad.Trans.Reader.ReaderT
                                            (GHC.IORef.IORef
                                               System.Console.Haskeline.History.History)
                                            (Control.Monad.Trans.Reader.ReaderT
                                               (GHC.IORef.IORef
                                                  System.Console.Haskeline.Command.KillRing.KillRing)
                                               (Control.Monad.Trans.Reader.ReaderT
                                                  System.Console.Haskeline.Prefs.Prefs
                                                  (Control.Monad.Trans.Reader.ReaderT
                                                     (System.Console.Haskeline.InputT.Settings
                                                        (Control.Monad.Trans.State.Strict.StateT
                                                           Syntax.Ctx GHC.Types.IO))
                                                     (Control.Monad.Trans.State.Strict.StateT
                                                        Syntax.Ctx GHC.Types.IO))))>_R
                                         <()>_N))
                               (Trans
                                    (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                              <Control.Monad.Trans.State.Strict.StateT
                                                 Syntax.Ctx GHC.Types.IO>_R))
                                    (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                     Syntax.Ctx
                                                                                     GHC.Types.IO>_N) <()>_N))) -}
3b581638d80e18f492dd5b06412ccb92
  repl :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Repl.repl1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
f448d4f3f7172feb68a0ed296ed7abe5
  repl1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ((System.Console.Repline.evalRepl
                          @ (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
                          @ ()
                          (Repl.$s$fMonadExceptionStateT @ Syntax.Ctx)
                          Repl.repl2
                          Repl.cmd
                          Repl.options
                          Repl.completer
                          Repl.ini1
                            `cast`
                          (Trans
                               (<System.Console.Haskeline.Term.RunTerm>_R
                                ->_R Trans
                                         (<GHC.IORef.IORef
                                             System.Console.Haskeline.History.History>_R
                                          ->_R Trans
                                                   (<GHC.IORef.IORef
                                                       System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                    ->_R Trans
                                                             (<System.Console.Haskeline.Prefs.Prefs>_R
                                                              ->_R Trans
                                                                       (<System.Console.Haskeline.InputT.Settings
                                                                           (Control.Monad.Trans.State.Strict.StateT
                                                                              Syntax.Ctx
                                                                              GHC.Types.IO)>_R
                                                                        ->_R Trans
                                                                                 (<Syntax.Ctx>_R
                                                                                  ->_R Sym (GHC.Types.N:IO[0]
                                                                                                <((),
                                                                                                  Syntax.Ctx)>_R))
                                                                                 (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                           <Syntax.Ctx>_N
                                                                                           <GHC.Types.IO>_R
                                                                                           <()>_N)))
                                                                       (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                                 <*>_N
                                                                                 <System.Console.Haskeline.InputT.Settings
                                                                                    (Control.Monad.Trans.State.Strict.StateT
                                                                                       Syntax.Ctx
                                                                                       GHC.Types.IO)>_R
                                                                                 <Control.Monad.Trans.State.Strict.StateT
                                                                                    Syntax.Ctx
                                                                                    GHC.Types.IO>_R
                                                                                 <()>_N)))
                                                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                       <*>_N
                                                                       <System.Console.Haskeline.Prefs.Prefs>_R
                                                                       <Control.Monad.Trans.Reader.ReaderT
                                                                          (System.Console.Haskeline.InputT.Settings
                                                                             (Control.Monad.Trans.State.Strict.StateT
                                                                                Syntax.Ctx
                                                                                GHC.Types.IO))
                                                                          (Control.Monad.Trans.State.Strict.StateT
                                                                             Syntax.Ctx
                                                                             GHC.Types.IO)>_R
                                                                       <()>_N)))
                                                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                             <*>_N
                                                             <GHC.IORef.IORef
                                                                System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                             <Control.Monad.Trans.Reader.ReaderT
                                                                System.Console.Haskeline.Prefs.Prefs
                                                                (Control.Monad.Trans.Reader.ReaderT
                                                                   (System.Console.Haskeline.InputT.Settings
                                                                      (Control.Monad.Trans.State.Strict.StateT
                                                                         Syntax.Ctx GHC.Types.IO))
                                                                   (Control.Monad.Trans.State.Strict.StateT
                                                                      Syntax.Ctx GHC.Types.IO))>_R
                                                             <()>_N)))
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <GHC.IORef.IORef
                                                      System.Console.Haskeline.History.History>_R
                                                   <Control.Monad.Trans.Reader.ReaderT
                                                      (GHC.IORef.IORef
                                                         System.Console.Haskeline.Command.KillRing.KillRing)
                                                      (Control.Monad.Trans.Reader.ReaderT
                                                         System.Console.Haskeline.Prefs.Prefs
                                                         (Control.Monad.Trans.Reader.ReaderT
                                                            (System.Console.Haskeline.InputT.Settings
                                                               (Control.Monad.Trans.State.Strict.StateT
                                                                  Syntax.Ctx GHC.Types.IO))
                                                            (Control.Monad.Trans.State.Strict.StateT
                                                               Syntax.Ctx GHC.Types.IO)))>_R
                                                   <()>_N)))
                               (Trans
                                    (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                              <*>_N
                                              <System.Console.Haskeline.Term.RunTerm>_R
                                              <Control.Monad.Trans.Reader.ReaderT
                                                 (GHC.IORef.IORef
                                                    System.Console.Haskeline.History.History)
                                                 (Control.Monad.Trans.Reader.ReaderT
                                                    (GHC.IORef.IORef
                                                       System.Console.Haskeline.Command.KillRing.KillRing)
                                                    (Control.Monad.Trans.Reader.ReaderT
                                                       System.Console.Haskeline.Prefs.Prefs
                                                       (Control.Monad.Trans.Reader.ReaderT
                                                          (System.Console.Haskeline.InputT.Settings
                                                             (Control.Monad.Trans.State.Strict.StateT
                                                                Syntax.Ctx GHC.Types.IO))
                                                          (Control.Monad.Trans.State.Strict.StateT
                                                             Syntax.Ctx GHC.Types.IO))))>_R
                                              <()>_N))
                                    (Trans
                                         (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                                   <Control.Monad.Trans.State.Strict.StateT
                                                      Syntax.Ctx GHC.Types.IO>_R))
                                         (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                          Syntax.Ctx
                                                                                          GHC.Types.IO>_N) <()>_N))))
                         `cast`
                       (Control.Monad.Trans.State.Strict.N:StateT[0]
                            <Syntax.Ctx>_N <GHC.Types.IO>_R <()>_N)
                         Gamma.initCtx)
                        `cast`
                      (GHC.Types.N:IO[0] <((), Syntax.Ctx)>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) a1 ds2 -> (# ipv, a1 #) } }) -}
5abdcb12f8f70321e801343690cd5dd7
  repl2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCStringUtf8#
                   "\\206\\187sec > "#) -}
1d423b1f0667bc8ee6ca85522c3307f1
  typeof :: [GHC.Base.String] -> Processor.Repl ()
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ (args :: [GHC.Base.String]) ->
                 case args of wild {
                   []
                   -> Repl.typeof2
                        `cast`
                      (Trans
                           (<System.Console.Haskeline.Term.RunTerm>_R
                            ->_R Trans
                                     (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                      ->_R Trans
                                               (<GHC.IORef.IORef
                                                   System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                ->_R Trans
                                                         (<System.Console.Haskeline.Prefs.Prefs>_R
                                                          ->_R Trans
                                                                   (<System.Console.Haskeline.InputT.Settings
                                                                       (Control.Monad.Trans.State.Strict.StateT
                                                                          Syntax.Ctx
                                                                          GHC.Types.IO)>_R
                                                                    ->_R Trans
                                                                             (<Syntax.Ctx>_R
                                                                              ->_R Sym (GHC.Types.N:IO[0]
                                                                                            <((),
                                                                                              Syntax.Ctx)>_R))
                                                                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                       <Syntax.Ctx>_N
                                                                                       <GHC.Types.IO>_R
                                                                                       <()>_N)))
                                                                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                             <*>_N
                                                                             <System.Console.Haskeline.InputT.Settings
                                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                                   Syntax.Ctx
                                                                                   GHC.Types.IO)>_R
                                                                             <Control.Monad.Trans.State.Strict.StateT
                                                                                Syntax.Ctx
                                                                                GHC.Types.IO>_R
                                                                             <()>_N)))
                                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                   <*>_N
                                                                   <System.Console.Haskeline.Prefs.Prefs>_R
                                                                   <Control.Monad.Trans.Reader.ReaderT
                                                                      (System.Console.Haskeline.InputT.Settings
                                                                         (Control.Monad.Trans.State.Strict.StateT
                                                                            Syntax.Ctx
                                                                            GHC.Types.IO))
                                                                      (Control.Monad.Trans.State.Strict.StateT
                                                                         Syntax.Ctx GHC.Types.IO)>_R
                                                                   <()>_N)))
                                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                         <*>_N
                                                         <GHC.IORef.IORef
                                                            System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                         <Control.Monad.Trans.Reader.ReaderT
                                                            System.Console.Haskeline.Prefs.Prefs
                                                            (Control.Monad.Trans.Reader.ReaderT
                                                               (System.Console.Haskeline.InputT.Settings
                                                                  (Control.Monad.Trans.State.Strict.StateT
                                                                     Syntax.Ctx GHC.Types.IO))
                                                               (Control.Monad.Trans.State.Strict.StateT
                                                                  Syntax.Ctx GHC.Types.IO))>_R
                                                         <()>_N)))
                                     (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                               <*>_N
                                               <GHC.IORef.IORef
                                                  System.Console.Haskeline.History.History>_R
                                               <Control.Monad.Trans.Reader.ReaderT
                                                  (GHC.IORef.IORef
                                                     System.Console.Haskeline.Command.KillRing.KillRing)
                                                  (Control.Monad.Trans.Reader.ReaderT
                                                     System.Console.Haskeline.Prefs.Prefs
                                                     (Control.Monad.Trans.Reader.ReaderT
                                                        (System.Console.Haskeline.InputT.Settings
                                                           (Control.Monad.Trans.State.Strict.StateT
                                                              Syntax.Ctx GHC.Types.IO))
                                                        (Control.Monad.Trans.State.Strict.StateT
                                                           Syntax.Ctx GHC.Types.IO)))>_R
                                               <()>_N)))
                           (Trans
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <System.Console.Haskeline.Term.RunTerm>_R
                                          <Control.Monad.Trans.Reader.ReaderT
                                             (GHC.IORef.IORef
                                                System.Console.Haskeline.History.History)
                                             (Control.Monad.Trans.Reader.ReaderT
                                                (GHC.IORef.IORef
                                                   System.Console.Haskeline.Command.KillRing.KillRing)
                                                (Control.Monad.Trans.Reader.ReaderT
                                                   System.Console.Haskeline.Prefs.Prefs
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      (System.Console.Haskeline.InputT.Settings
                                                         (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO))
                                                      (Control.Monad.Trans.State.Strict.StateT
                                                         Syntax.Ctx GHC.Types.IO))))>_R
                                          <()>_N))
                                (Trans
                                     (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                               <Control.Monad.Trans.State.Strict.StateT
                                                  Syntax.Ctx GHC.Types.IO>_R))
                                     (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                      Syntax.Ctx
                                                                                      GHC.Types.IO>_N) <()>_N)))
                   : ds1 ds2
                   -> let {
                        arg :: GHC.Base.String
                        = GHC.Base.++ @ GHC.Types.Char ds1 (Data.OldList.unwords_go ds2)
                      } in
                      let {
                        lvl44 :: [GHC.Types.Char]
                        = GHC.Base.++
                            @ GHC.Types.Char
                            (GHC.Types.:
                               @ GHC.Types.Char
                               GHC.Show.shows6
                               (GHC.Show.showLitString arg Repl.help2))
                            Repl.typeof1
                      } in
                      (\ (r1 :: System.Console.Haskeline.Term.RunTerm)
                         (eta :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                         (eta1 :: GHC.IORef.IORef
                                    System.Console.Haskeline.Command.KillRing.KillRing)
                         (eta2 :: System.Console.Haskeline.Prefs.Prefs)
                         (eta3 :: System.Console.Haskeline.InputT.Settings
                                    (Control.Monad.Trans.State.Strict.StateT
                                       Syntax.Ctx GHC.Types.IO))
                         (eta4 :: Syntax.Ctx)
                         (eta5 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                       case eta4 of wild1 { Syntax.Ctx ds4 ds5 ->
                       case Repl.$slookup1
                              @ Syntax.GType
                              arg
                              ds5 `cast` (Syntax.N:Gamma[0]) of wild2 {
                         GHC.Base.Nothing
                         -> case GHC.IO.Handle.Text.hPutStr2
                                   GHC.IO.Handle.FD.stdout
                                   lvl44
                                   GHC.Types.True
                                   eta5 of ds6 { (#,#) ipv ipv1 ->
                            (# ipv, (ipv1, wild1) #) }
                         GHC.Base.Just val
                         -> case Text.PrettyPrint.ANSI.Leijen.displayIO1
                                   GHC.IO.Handle.FD.stdout
                                   (Text.PrettyPrint.ANSI.Leijen.renderFits
                                      Text.PrettyPrint.ANSI.Leijen.fits1
                                      Text.PrettyPrint.ANSI.Leijen.$fShowDoc3
                                      Text.PrettyPrint.ANSI.Leijen.$fShowDoc2
                                      (Text.PrettyPrint.ANSI.Leijen.Cat
                                         (PrettyPrint.$fDisplayGType_$cdisplay val)
                                         Text.PrettyPrint.ANSI.Leijen.Line))
                                   eta5 of ds6 { (#,#) ipv ipv1 ->
                            (# ipv, (ipv1, wild1) #) } } })
                        `cast`
                      (Trans
                           (<System.Console.Haskeline.Term.RunTerm>_R
                            ->_R Trans
                                     (<GHC.IORef.IORef System.Console.Haskeline.History.History>_R
                                      ->_R Trans
                                               (<GHC.IORef.IORef
                                                   System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                ->_R Trans
                                                         (<System.Console.Haskeline.Prefs.Prefs>_R
                                                          ->_R Trans
                                                                   (<System.Console.Haskeline.InputT.Settings
                                                                       (Control.Monad.Trans.State.Strict.StateT
                                                                          Syntax.Ctx
                                                                          GHC.Types.IO)>_R
                                                                    ->_R Trans
                                                                             (<Syntax.Ctx>_R
                                                                              ->_R Sym (GHC.Types.N:IO[0]
                                                                                            <((),
                                                                                              Syntax.Ctx)>_R))
                                                                             (Sym (Control.Monad.Trans.State.Strict.N:StateT[0]
                                                                                       <Syntax.Ctx>_N
                                                                                       <GHC.Types.IO>_R
                                                                                       <()>_N)))
                                                                   (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                             <*>_N
                                                                             <System.Console.Haskeline.InputT.Settings
                                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                                   Syntax.Ctx
                                                                                   GHC.Types.IO)>_R
                                                                             <Control.Monad.Trans.State.Strict.StateT
                                                                                Syntax.Ctx
                                                                                GHC.Types.IO>_R
                                                                             <()>_N)))
                                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                                   <*>_N
                                                                   <System.Console.Haskeline.Prefs.Prefs>_R
                                                                   <Control.Monad.Trans.Reader.ReaderT
                                                                      (System.Console.Haskeline.InputT.Settings
                                                                         (Control.Monad.Trans.State.Strict.StateT
                                                                            Syntax.Ctx
                                                                            GHC.Types.IO))
                                                                      (Control.Monad.Trans.State.Strict.StateT
                                                                         Syntax.Ctx GHC.Types.IO)>_R
                                                                   <()>_N)))
                                               (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                         <*>_N
                                                         <GHC.IORef.IORef
                                                            System.Console.Haskeline.Command.KillRing.KillRing>_R
                                                         <Control.Monad.Trans.Reader.ReaderT
                                                            System.Console.Haskeline.Prefs.Prefs
                                                            (Control.Monad.Trans.Reader.ReaderT
                                                               (System.Console.Haskeline.InputT.Settings
                                                                  (Control.Monad.Trans.State.Strict.StateT
                                                                     Syntax.Ctx GHC.Types.IO))
                                                               (Control.Monad.Trans.State.Strict.StateT
                                                                  Syntax.Ctx GHC.Types.IO))>_R
                                                         <()>_N)))
                                     (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                               <*>_N
                                               <GHC.IORef.IORef
                                                  System.Console.Haskeline.History.History>_R
                                               <Control.Monad.Trans.Reader.ReaderT
                                                  (GHC.IORef.IORef
                                                     System.Console.Haskeline.Command.KillRing.KillRing)
                                                  (Control.Monad.Trans.Reader.ReaderT
                                                     System.Console.Haskeline.Prefs.Prefs
                                                     (Control.Monad.Trans.Reader.ReaderT
                                                        (System.Console.Haskeline.InputT.Settings
                                                           (Control.Monad.Trans.State.Strict.StateT
                                                              Syntax.Ctx GHC.Types.IO))
                                                        (Control.Monad.Trans.State.Strict.StateT
                                                           Syntax.Ctx GHC.Types.IO)))>_R
                                               <()>_N)))
                           (Trans
                                (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                          <*>_N
                                          <System.Console.Haskeline.Term.RunTerm>_R
                                          <Control.Monad.Trans.Reader.ReaderT
                                             (GHC.IORef.IORef
                                                System.Console.Haskeline.History.History)
                                             (Control.Monad.Trans.Reader.ReaderT
                                                (GHC.IORef.IORef
                                                   System.Console.Haskeline.Command.KillRing.KillRing)
                                                (Control.Monad.Trans.Reader.ReaderT
                                                   System.Console.Haskeline.Prefs.Prefs
                                                   (Control.Monad.Trans.Reader.ReaderT
                                                      (System.Console.Haskeline.InputT.Settings
                                                         (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO))
                                                      (Control.Monad.Trans.State.Strict.StateT
                                                         Syntax.Ctx GHC.Types.IO))))>_R
                                          <()>_N))
                                (Trans
                                     (Sym (System.Console.Haskeline.InputT.N:InputT[0]
                                               <Control.Monad.Trans.State.Strict.StateT
                                                  Syntax.Ctx GHC.Types.IO>_R))
                                     (Sym (System.Console.Repline.N:HaskelineT[0]) <Control.Monad.Trans.State.Strict.StateT
                                                                                      Syntax.Ctx
                                                                                      GHC.Types.IO>_N) <()>_N))) }) -}
73c9e78e17c12f7d894f7f344f746ef6
  typeof1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " is not in scope"#) -}
fac91079a1dc51ec968a8aec695aea59
  typeof2 ::
    System.Console.Haskeline.Term.RunTerm
    -> GHC.IORef.IORef System.Console.Haskeline.History.History
    -> GHC.IORef.IORef
         System.Console.Haskeline.Command.KillRing.KillRing
    -> System.Console.Haskeline.Prefs.Prefs
    -> System.Console.Haskeline.InputT.Settings
         (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO)
    -> Syntax.Ctx
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, ((), Syntax.Ctx) #)
  {- Arity: 7, Strictness: <L,A><L,A><L,A><L,A><L,A><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (7, True, True)
                (\ (w :: System.Console.Haskeline.Term.RunTerm)
                   (w1 :: GHC.IORef.IORef System.Console.Haskeline.History.History)
                   (w2 :: GHC.IORef.IORef
                            System.Console.Haskeline.Command.KillRing.KillRing)
                   (w3 :: System.Console.Haskeline.Prefs.Prefs)
                   (w4 :: System.Console.Haskeline.InputT.Settings
                            (Control.Monad.Trans.State.Strict.StateT Syntax.Ctx GHC.Types.IO))
                   (w5 :: Syntax.Ctx)
                   (w6 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Repl.$wlvl2 w5 w6) -}
53a2bf4d198064bac28649f2fd10c136
  typeof3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "you must enter the name of a function"#) -}
instance Control.Monad.Catch.MonadThrow [System.Console.Repline.HaskelineT]
  = Repl.$fMonadThrowHaskelineT
"SPEC $cthrowM @ (StateT Ctx IO)" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                (Control.Monad.Trans.State.Strict.StateT
                                                                   Syntax.Ctx GHC.Types.IO))
  Repl.$fMonadThrowHaskelineT_$cthrowM @ (Control.Monad.Trans.State.Strict.StateT
                                            Syntax.Ctx GHC.Types.IO)
                                       $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$cthrowM
"SPEC $fMonadThrowHaskelineT @ (StateT Ctx IO)" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                              (Control.Monad.Trans.State.Strict.StateT
                                                                                 Syntax.Ctx
                                                                                 GHC.Types.IO))
  Repl.$fMonadThrowHaskelineT @ (Control.Monad.Trans.State.Strict.StateT
                                   Syntax.Ctx GHC.Types.IO)
                              $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fMonadThrowHaskelineT
"SPEC comp @ (StateT Ctx IO)" [ALWAYS] forall ($dMonadState :: Control.Monad.State.Class.MonadState
                                                                 Syntax.Ctx
                                                                 (Control.Monad.Trans.State.Strict.StateT
                                                                    Syntax.Ctx GHC.Types.IO))
                                              ($dMonad :: GHC.Base.Monad
                                                            (Control.Monad.Trans.State.Strict.StateT
                                                               Syntax.Ctx GHC.Types.IO))
  Repl.comp @ (Control.Monad.Trans.State.Strict.StateT
                 Syntax.Ctx GHC.Types.IO)
            $dMonad
            $dMonadState
  = Repl.comp_$scomp
"SPEC defaultMatcher @ (StateT Ctx IO)" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                        (Control.Monad.Trans.State.Strict.StateT
                                                                           Syntax.Ctx GHC.Types.IO))
  Repl.defaultMatcher @ (Control.Monad.Trans.State.Strict.StateT
                           Syntax.Ctx GHC.Types.IO)
                      $dMonadIO
  = Repl.completer_$sdefaultMatcher
"SPEC/Repl $fApplicativeHaskelineT @ (StateT Ctx IO)" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                          (Control.Monad.Trans.State.Strict.StateT
                                                                                             Syntax.Ctx
                                                                                             GHC.Types.IO))
  System.Console.Repline.$fApplicativeHaskelineT @ (Control.Monad.Trans.State.Strict.StateT
                                                      Syntax.Ctx GHC.Types.IO)
                                                 $dApplicative
  = Repl.$fMonadThrowHaskelineT_$s$fApplicativeHaskelineT
"SPEC/Repl $fApplicativeHaskelineT_$cp1Applicative @ (StateT Ctx IO)" [ALWAYS] forall ($dApplicative :: GHC.Base.Applicative
                                                                                                          (Control.Monad.Trans.State.Strict.StateT
                                                                                                             Syntax.Ctx
                                                                                                             GHC.Types.IO))
  System.Console.Repline.$fApplicativeHaskelineT_$cp1Applicative @ (Control.Monad.Trans.State.Strict.StateT
                                                                      Syntax.Ctx GHC.Types.IO)
                                                                 $dApplicative
  = Repl.$fMonadThrowHaskelineT_$s$fApplicativeHaskelineT_$cp1Applicative
"SPEC/Repl $fApplicativeStateT @ IO _" [ALWAYS] forall @ s
                                                       ($dMonad :: GHC.Base.Monad GHC.Types.IO)
                                                       ($dFunctor :: GHC.Base.Functor GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT @ GHC.Types.IO
                                                       @ s
                                                       $dFunctor
                                                       $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fApplicativeStateT @ s
"SPEC/Repl $fApplicativeStateT_$c<*> @ IO _" [ALWAYS] forall @ s
                                                             ($dMonad :: GHC.Base.Monad
                                                                           GHC.Types.IO)
                                                             ($dFunctor :: GHC.Base.Functor
                                                                             GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$c<*> @ GHC.Types.IO
                                                             @ s
                                                             $dFunctor
                                                             $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fApplicativeStateT_$c<*> @ s
"SPEC/Repl $fApplicativeStateT_$cpure @ IO _" [ALWAYS] forall @ s
                                                              ($dMonad :: GHC.Base.Monad
                                                                            GHC.Types.IO)
                                                              ($dFunctor :: GHC.Base.Functor
                                                                              GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fApplicativeStateT_$cpure @ GHC.Types.IO
                                                              @ s
                                                              $dFunctor
                                                              $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fApplicativeStateT_$cpure @ s
"SPEC/Repl $fFunctorHaskelineT @ (StateT Ctx IO)" [ALWAYS] forall ($dFunctor :: GHC.Base.Functor
                                                                                  (Control.Monad.Trans.State.Strict.StateT
                                                                                     Syntax.Ctx
                                                                                     GHC.Types.IO))
  System.Console.Repline.$fFunctorHaskelineT @ (Control.Monad.Trans.State.Strict.StateT
                                                  Syntax.Ctx GHC.Types.IO)
                                             $dFunctor
  = Repl.$fMonadThrowHaskelineT_$s$fFunctorHaskelineT
"SPEC/Repl $fMonadExceptionStateT @ IO _" [ALWAYS] forall @ s
                                                          ($dMonadException :: System.Console.Haskeline.MonadException.MonadException
                                                                                 GHC.Types.IO)
  System.Console.Haskeline.MonadException.$fMonadExceptionStateT @ GHC.Types.IO
                                                                 @ s
                                                                 $dMonadException
  = Repl.$s$fMonadExceptionStateT @ s
"SPEC/Repl $fMonadExceptionStateT_$cp1MonadException @ IO _" [ALWAYS] forall @ s
                                                                             ($dMonadException :: System.Console.Haskeline.MonadException.MonadException
                                                                                                    GHC.Types.IO)
  System.Console.Haskeline.MonadException.$fMonadExceptionStateT_$cp1MonadException @ GHC.Types.IO
                                                                                    @ s
                                                                                    $dMonadException
  = Repl.$s$fMonadExceptionStateT_$s$fMonadExceptionStateT_$cp1MonadException
      @ s
"SPEC/Repl $fMonadHaskelineT @ (StateT Ctx IO)" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                              (Control.Monad.Trans.State.Strict.StateT
                                                                                 Syntax.Ctx
                                                                                 GHC.Types.IO))
  System.Console.Repline.$fMonadHaskelineT @ (Control.Monad.Trans.State.Strict.StateT
                                                Syntax.Ctx GHC.Types.IO)
                                           $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fMonadHaskelineT
"SPEC/Repl $fMonadHaskelineT_$cp1Monad @ (StateT Ctx IO)" [ALWAYS] forall ($dMonad :: GHC.Base.Monad
                                                                                        (Control.Monad.Trans.State.Strict.StateT
                                                                                           Syntax.Ctx
                                                                                           GHC.Types.IO))
  System.Console.Repline.$fMonadHaskelineT_$cp1Monad @ (Control.Monad.Trans.State.Strict.StateT
                                                          Syntax.Ctx GHC.Types.IO)
                                                     $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fMonadHaskelineT_$cp1Monad
"SPEC/Repl $fMonadIOHaskelineT @ (StateT Ctx IO)" [ALWAYS] forall ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                                  (Control.Monad.Trans.State.Strict.StateT
                                                                                     Syntax.Ctx
                                                                                     GHC.Types.IO))
  System.Console.Repline.$fMonadIOHaskelineT @ (Control.Monad.Trans.State.Strict.StateT
                                                  Syntax.Ctx GHC.Types.IO)
                                             $dMonadIO
  = Repl.$s$fMonadIOHaskelineT
"SPEC/Repl $fMonadIOStateT @ IO _" [ALWAYS] forall @ s
                                                   ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                   GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fMonadIOStateT @ GHC.Types.IO
                                                   @ s
                                                   $dMonadIO
  = Repl.$s$fMonadExceptionStateT_$s$fMonadIOStateT @ s
"SPEC/Repl $fMonadIOStateT_$cp1MonadIO @ IO _" [ALWAYS] forall @ s
                                                               ($dMonadIO :: Control.Monad.IO.Class.MonadIO
                                                                               GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fMonadIOStateT_$cp1MonadIO @ GHC.Types.IO
                                                               @ s
                                                               $dMonadIO
  = Repl.$s$fMonadExceptionStateT_$s$fMonadIOStateT_$cp1MonadIO @ s
"SPEC/Repl $fMonadStateT @ IO _" [ALWAYS] forall @ s
                                                 ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fMonadStateT @ GHC.Types.IO
                                                 @ s
                                                 $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fMonadStateT @ s
"SPEC/Repl $fMonadStateT_$c>> @ IO _" [ALWAYS] forall @ s
                                                      ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$c>> @ GHC.Types.IO
                                                      @ s
                                                      $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fMonadStateT_$c>> @ s
"SPEC/Repl $fMonadStateT_$c>>= @ IO _" [ALWAYS] forall @ s
                                                       ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$c>>= @ GHC.Types.IO
                                                       @ s
                                                       $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fMonadStateT_$c>>= @ s
"SPEC/Repl $fMonadStateT_$cfail @ IO _" [ALWAYS] forall @ s
                                                        ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$cfail @ GHC.Types.IO
                                                        @ s
                                                        $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fMonadStateT_$cfail @ s
"SPEC/Repl $fMonadStateT_$cp1Monad @ IO _" [ALWAYS] forall @ s
                                                           ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.State.Strict.$fMonadStateT_$cp1Monad @ GHC.Types.IO
                                                           @ s
                                                           $dMonad
  = Repl.$fMonadThrowHaskelineT_$s$fMonadStateT_$cp1Monad @ s
"SPEC/Repl $fMonadStatesHaskelineT @ Ctx @ (StateT Ctx IO)" [ALWAYS] forall ($dMonadState :: Control.Monad.State.Class.MonadState
                                                                                               Syntax.Ctx
                                                                                               (Control.Monad.Trans.State.Strict.StateT
                                                                                                  Syntax.Ctx
                                                                                                  GHC.Types.IO))
  System.Console.Repline.$fMonadStatesHaskelineT @ Syntax.Ctx
                                                 @ (Control.Monad.Trans.State.Strict.StateT
                                                      Syntax.Ctx GHC.Types.IO)
                                                 $dMonadState
  = Repl.$s$fMonadStatesHaskelineT
"SPEC/Repl $fMonadStatesHaskelineT_$cp1MonadState @ Ctx @ (StateT
                                                            Ctx IO)" [ALWAYS] forall ($dMonadState :: Control.Monad.State.Class.MonadState
                                                                                                                                                                          Syntax.Ctx
                                                                                                                                                                          (Control.Monad.Trans.State.Strict.StateT
                                                                                                                                                                             Syntax.Ctx
                                                                                                                                                                             GHC.Types.IO))
  System.Console.Repline.$fMonadStatesHaskelineT_$cp1MonadState @ Syntax.Ctx
                                                                @ (Control.Monad.Trans.State.Strict.StateT
                                                                     Syntax.Ctx GHC.Types.IO)
                                                                $dMonadState
  = Repl.$s$fMonadIOHaskelineT_$s$fMonadStatesHaskelineT_$cp1MonadState
"SPEC/Repl $fMonadStatesHaskelineT_$cput @ Ctx @ (StateT Ctx IO)" [ALWAYS] forall ($dMonadState :: Control.Monad.State.Class.MonadState
                                                                                                     Syntax.Ctx
                                                                                                     (Control.Monad.Trans.State.Strict.StateT
                                                                                                        Syntax.Ctx
                                                                                                        GHC.Types.IO))
  System.Console.Repline.$fMonadStatesHaskelineT_$cput @ Syntax.Ctx
                                                       @ (Control.Monad.Trans.State.Strict.StateT
                                                            Syntax.Ctx GHC.Types.IO)
                                                       $dMonadState
  = Repl.$s$fMonadStatesHaskelineT_$s$fMonadStatesHaskelineT_$cput
"SPEC/Repl $fMonadStatesStateT @ IO _" [ALWAYS] forall @ s
                                                       ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.State.Class.$fMonadStatesStateT @ GHC.Types.IO
                                                @ s
                                                $dMonad
  = Repl.$s$fMonadStatesHaskelineT_$s$fMonadStatesStateT @ s
"SPEC/Repl put @ IO _" [ALWAYS] forall @ s
                                       ($dMonad :: GHC.Base.Monad GHC.Types.IO)
  Control.Monad.Trans.State.Strict.put @ GHC.Types.IO @ s $dMonad
  = Repl.$s$fMonadStatesHaskelineT_$sput @ s
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

